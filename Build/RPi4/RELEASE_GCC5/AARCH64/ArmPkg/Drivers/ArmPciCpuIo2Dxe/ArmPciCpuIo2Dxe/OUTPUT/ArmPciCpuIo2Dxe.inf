## @file
#  Produces the CPU I/O 2 Protocol by using the services of the I/O Library.
#
# Copyright (c) 2009 - 2014, Intel Corporation. All rights reserved.<BR>
# Copyright (c) 2016, Linaro Ltd. All rights reserved.<BR>
#
# SPDX-License-Identifier: BSD-2-Clause-Patent
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = ArmPciCpuIo2Dxe
  FILE_GUID                  = 168D1A6E-F4A5-448A-9E95-795661BB3067
  MODULE_TYPE                = DXE_DRIVER
  VERSION_STRING             = 1.0
  ENTRY_POINT                = ArmPciCpuIo2Initialize

[Packages.AARCH64]
  MdePkg/MdePkg.dec

[Binaries.AARCH64]
  PE32|ArmPciCpuIo2Dxe.efi
  DXE_DEPEX|ArmPciCpuIo2Dxe.depex

[PatchPcd.AARCH64]

[Protocols.AARCH64]
  ## PRODUCES
  gEfiCpuIo2ProtocolGuid

  ## SOMETIMES_CONSUMES
  gPcdProtocolGuid

  ## CONSUMES
  gEfiPcdProtocolGuid

  ## SOMETIMES_CONSUMES
  gGetPcdInfoProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiGetPcdInfoProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiLoadedImageProtocolGuid


[Ppis.AARCH64]

[Guids.AARCH64]

[PcdEx.AARCH64]

[LibraryClasses.AARCH64]
## @LIB_INSTANCES
#  MdePkg/Library/BaseMemoryLibOptDxe/BaseMemoryLibOptDxe.inf
#  MdePkg/Library/DxePcdLib/DxePcdLib.inf
#  MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/UefiBootServicesTableLib/UefiBootServicesTableLib.inf
#  MdePkg/Library/UefiDriverEntryPoint/UefiDriverEntryPoint.inf
#  MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsic.inf
#  MdePkg/Library/BaseStackCheckLib/BaseStackCheckLib.inf
#  ArmPkg/Library/CompilerIntrinsicsLib/CompilerIntrinsicsLib.inf

[Depex.AARCH64]
#  (TRUE) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiBdsArchProtocolGuid AND gEfiCpuArchProtocolGuid AND gEfiMetronomeArchProtocolGuid AND gEfiMonotonicCounterArchProtocolGuid AND gEfiRealTimeClockArchProtocolGuid AND gEfiResetArchProtocolGuid AND gEfiRuntimeArchProtocolGuid AND gEfiSecurityArchProtocolGuid AND gEfiTimerArchProtocolGuid AND gEfiVariableWriteArchProtocolGuid AND gEfiVariableArchProtocolGuid AND gEfiWatchdogTimerArchProtocolGuid)



#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = ARM AARCH64
#

[BuildOptions.AARCH64]
## @AsBuilt
##   GCC:RELEASE_GCC5_AARCH64_ASLPP_FLAGS = -x c -E -include AutoGen.h -DRPI_MODEL=4
##   GCC:RELEASE_GCC5_AARCH64_ASLDLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -Wl,--entry,ReferenceAcpiTable -u $(IMAGE_ENTRY_POINT) -Wl,--defsym=PECOFF_HEADER_SIZE=0 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -z common-page-size=0x20
##   GCC:RELEASE_GCC5_AARCH64_GENFW_FLAGS = 
##   GCC:RELEASE_GCC5_AARCH64_OBJCOPY_FLAGS = objcopy not needed for
##   GCC:RELEASE_GCC5_AARCH64_DEPS_FLAGS = -MMD -MF $@.deps
##   GCC:RELEASE_GCC5_AARCH64_ASM_FLAGS = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) -c -x assembler -imacros AutoGen.h -mlittle-endian
##   GCC:RELEASE_GCC5_AARCH64_CC_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -include AutoGen.h -fno-common -ffunction-sections -fdata-sections -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -include AutoGen.h -fno-common -mlittle-endian -fno-short-enums -fverbose-asm -funsigned-char  -ffunction-sections -fdata-sections -Wno-address -fno-asynchronous-unwind-tables -fno-unwind-tables -fno-pic -fno-pie -ffixed-x18 -mcmodel=small -flto -Wno-unused-but-set-variable -Wno-unused-const-variable -DRPI_MODEL=4 -D ENABLE_MD5_DEPRECATED_INTERFACES -DMDEPKG_NDEBUG -DNDEBUG
##   GCC:RELEASE_GCC5_AARCH64_ASMLINK_FLAGS = /nologo /tiny
##   GCC:RELEASE_GCC5_AARCH64_VFR_FLAGS = -l -n
##   GCC:RELEASE_GCC5_AARCH64_ASLCC_FLAGS = -x c -fno-lto -DRPI_MODEL=4
##   GCC:RELEASE_GCC5_AARCH64_APP_FLAGS = 
##   GCC:RELEASE_GCC5_AARCH64_OPTROM_FLAGS = -e
##   GCC:RELEASE_GCC5_AARCH64_DTC_FLAGS = -H epapr
##   GCC:RELEASE_GCC5_AARCH64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:RELEASE_GCC5_AARCH64_RC_FLAGS = -I binary -O elf64-littleaarch64 -B aarch64 --rename-section .data=.hii
##   GCC:RELEASE_GCC5_AARCH64_PP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E -x assembler-with-cpp -include AutoGen.h -DOPENSBI_EXTERNAL_SBI_TYPES=OpensbiTypes.h -DRPI_MODEL=4
##   GCC:RELEASE_GCC5_AARCH64_VFRPP_FLAGS = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -x c -E -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h -DRPI_MODEL=4
##   GCC:RELEASE_GCC5_AARCH64_DLINK_FLAGS = -Wl,--emit-relocs -nostdlib -Wl,--gc-sections -u $(IMAGE_ENTRY_POINT) -Wl,-e,$(IMAGE_ENTRY_POINT),-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map -z common-page-size=0x20 -z common-page-size=0x1000 -flto -Os -L/home/alastair/pftf-rpi4/edk2/ArmPkg/Library/GccLto -llto-aarch64 -Wl,-plugin-opt=-pass-through=-llto-aarch64 -Wno-lto-type-mismatch
##   GCC:RELEASE_GCC5_AARCH64_PLATFORM_FLAGS = 
##   GCC:RELEASE_GCC5_AARCH64_ASL_FLAGS = 
##   GCC:RELEASE_GCC5_AARCH64_NASMB_FLAGS = -f bin
##   GCC:RELEASE_GCC5_AARCH64_DLINK2_FLAGS = -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -Wl,--defsym=PECOFF_HEADER_SIZE=0x228 -Wno-error
##   GCC:RELEASE_GCC5_AARCH64_DTCPP_FLAGS = -E -x assembler-with-cpp -imacros AutoGen.h -nostdinc -undef
