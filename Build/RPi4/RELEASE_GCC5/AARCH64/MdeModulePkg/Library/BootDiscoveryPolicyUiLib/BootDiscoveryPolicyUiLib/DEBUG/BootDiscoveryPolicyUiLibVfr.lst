//
//  VFR compiler version  2.01 (UEFI 2.4) Developer Build based on Revision: Unknown
//
extern unsigned char BootDiscoveryPolicyUiLibStrings[];
extern EFI_GUID gEfiIfrBootMaintenanceGuid;
typedef struct {
  UINT32 BootDiscoveryPolicy;
} BOOT_DISCOVERY_POLICY_VARSTORE_DATA;
formset
>00000000: 0E A7 07 71 6F 5B 3C BB 60 46 92 CD 54 26 90 28 0B BD 02 00 02 00 01 91 DC DE B2 9F D5 D2 48 89 8A 12 49 0C 74 A4 E0 
>00000027: 5C 06 00 00 00 00 
>0000002D: 5C 06 00 00 01 00 
  guid = { 0x5b6f7107, 0xbb3c, 0x4660, { 0x92, 0xcd, 0x54, 0x26, 0x90, 0x28, 0x0b, 0xbd } },
  title = STRING_TOKEN(0x0002),
  help = STRING_TOKEN(0x0002),
  classguid = { 0xb2dedc91, 0xd59f, 0x48d2, { 0x89, 0x8a, 0x12, 0x49, 0xc, 0x74, 0xa4, 0xe0 } },
  efivarstore BOOT_DISCOVERY_POLICY_VARSTORE_DATA,
>00000033: 26 2E 01 00 07 71 6F 5B 3C BB 60 46 92 CD 54 26 90 28 0B BD 07 00 00 00 04 00 42 6F 6F 74 44 69 73 63 6F 76 65 72 79 50 6F 6C 69 63 79 00 
    attribute = 0x00000002 | 0x00000004 | 0x00000001,
    name = BootDiscoveryPolicy,
    guid = { 0x5b6f7107, 0xbb3c, 0x4660, { 0x92, 0xcd, 0x54, 0x26, 0x90, 0x28, 0x0b, 0xbd } };
  form formid = 0x0001,
>00000061: 01 86 01 00 02 00 
    title = STRING_TOKEN(0x0002);
  oneof varid = BootDiscoveryPolicy.BootDiscoveryPolicy,
>00000067: 05 9A 02 00 02 00 01 00 01 00 00 00 14 12 00 00 00 00 02 00 00 00 00 00 00 00 
    prompt = STRING_TOKEN(0x0002),
    help = STRING_TOKEN(0x0002),
    flags = NUMERIC_SIZE_4 | INTERACTIVE | RESET_REQUIRED,
    option text = STRING_TOKEN(0x0003), value = 0, flags = DEFAULT;
>00000081: 09 0A 03 00 12 02 00 00 00 00 
    option text = STRING_TOKEN(0x0004), value = 1, flags = 0;
>0000008B: 09 0A 04 00 02 02 01 00 00 00 
    option text = STRING_TOKEN(0x0005), value = 2, flags = 0;
>00000095: 09 0A 05 00 02 02 02 00 00 00 
  endoneof;
>0000009F: 29 02 
  endform;
>000000A1: 29 02 
endformset;
>000000A3: 29 02 

//
// All Opcode Record List 
//
>00000000: 0E A7 07 71 6F 5B 3C BB 60 46 92 CD 54 26 90 28 0B BD 02 00 02 00 01 91 DC DE B2 9F D5 D2 48 89 8A 12 49 0C 74 A4 E0 
>00000027: 5C 06 00 00 00 00 
>0000002D: 5C 06 00 00 01 00 
>00000033: 26 2E 01 00 07 71 6F 5B 3C BB 60 46 92 CD 54 26 90 28 0B BD 07 00 00 00 04 00 42 6F 6F 74 44 69 73 63 6F 76 65 72 79 50 6F 6C 69 63 79 00 
>00000061: 01 86 01 00 02 00 
>00000067: 05 9A 02 00 02 00 01 00 01 00 00 00 14 12 00 00 00 00 02 00 00 00 00 00 00 00 
>00000081: 09 0A 03 00 12 02 00 00 00 00 
>0000008B: 09 0A 04 00 02 02 01 00 00 00 
>00000095: 09 0A 05 00 02 02 02 00 00 00 
>0000009F: 29 02 
>000000A1: 29 02 
>000000A3: 29 02 

Total Size of all record is 0x000000A5


***************************************************************
		mPackAlign = 8
		struct BOOT_DISCOVERY_POLICY_VARSTORE_DATA : mAlign [4] mTotalSize [0x4]

		struct BOOT_DISCOVERY_POLICY_VARSTORE_DATA {
			+00000000[00000000] BootDiscoveryPolicy <UINT32>
		};
---------------------------------------------------------------
		struct EFI_HII_REF : mAlign [16] mTotalSize [0x16]

		struct EFI_HII_REF {
			+00000000[00000000] QuestionId <UINT16>
			+00000002[00000002] FormId <UINT16>
			+00000004[00000004] FormSetGuid <(null)>
			+00000020[00000014] DevicePath <EFI_STRING_ID>
		};
---------------------------------------------------------------
		struct EFI_HII_TIME : mAlign [1] mTotalSize [0x3]

		struct EFI_HII_TIME {
			+00000000[00000000] Hours <UINT8>
			+00000001[00000001] Minutes <UINT8>
			+00000002[00000002] Seconds <UINT8>
		};
---------------------------------------------------------------
		struct EFI_STRING_ID : mAlign [2] mTotalSize [0x2]

		struct EFI_STRING_ID {
		};
---------------------------------------------------------------
		struct EFI_HII_DATE : mAlign [2] mTotalSize [0x4]

		struct EFI_HII_DATE {
			+00000000[00000000] Year <UINT16>
			+00000002[00000002] Month <UINT8>
			+00000003[00000003] Day <UINT8>
		};
---------------------------------------------------------------
		struct BOOLEAN : mAlign [1] mTotalSize [0x1]

		struct BOOLEAN {
		};
---------------------------------------------------------------
		struct UINT8 : mAlign [1] mTotalSize [0x1]

		struct UINT8 {
		};
---------------------------------------------------------------
		struct UINT16 : mAlign [2] mTotalSize [0x2]

		struct UINT16 {
		};
---------------------------------------------------------------
		struct UINT32 : mAlign [4] mTotalSize [0x4]

		struct UINT32 {
		};
---------------------------------------------------------------
		struct UINT64 : mAlign [8] mTotalSize [0x8]

		struct UINT64 {
		};
---------------------------------------------------------------
***************************************************************
