/** @file

  @copyright
  Copyright 2016 - 2019 Intel Corporation. <BR>

  SPDX-License-Identifier: BSD-2-Clause-Patent
**/
External(\_SB.EDTM, MethodObj)
External (\_SB.EDNT, FieldUnitObj)
External (\_SB.EDVD, FieldUnitObj)

#define PCIE_EDPC_NOTIFY(stack, port)                                                  \
  store (\_SB.stack._SEG, Local0)                                                      \
  store (\_SB.stack._BBN, Local1)                                                      \
  store (\_SB.stack.port._ADR, Local2)                                                 \
  And (Local2, 0xffff, Local3)                                                         \
  ShiftRight (Local2, 16, Local4)                                                      \
  If (\_SB.EDTM(Local0, Local1, Local4, Local3)) {                                     \
    If (\_SB.EDNT) {                                                                   \
      /*                                                                               \
       we are going to notify this device, set the valid flag to EDPC_INFO_NOTIFIED    \
      */                                                                               \
      store (2, \_SB.EDVD)                                                             \
      Notify(\_SB.stack.port, 0xf) /*Error Eject*/                                 \
    } else {                                                                           \
      /*                                                                               \
       we are going to notify this device, set the valid flag to EDPC_INFO_NOTIFIED    \
      */                                                                               \
      store (2, \_SB.EDVD)                                                             \
      Notify(\_SB.stack.port, 0)   /*Bus Check*/                                   \
    }                                                                                  \
  }

Scope (\_SB) {
  //
  // eDPC Notify Method
  //
  Method (EDNM, 0) {
    // PC01 PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC01, BR1A)
    PCIE_EDPC_NOTIFY(PC01, BR1B)
    PCIE_EDPC_NOTIFY(PC01, BR1C)
    PCIE_EDPC_NOTIFY(PC01, BR1D)

    // PC02 PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC02, BR2A)
    PCIE_EDPC_NOTIFY(PC02, BR2B)
    PCIE_EDPC_NOTIFY(PC02, BR2C)
    PCIE_EDPC_NOTIFY(PC02, BR2D)

    // PC03  PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC03, BR3A)
    PCIE_EDPC_NOTIFY(PC03, BR3B)
    PCIE_EDPC_NOTIFY(PC03, BR3C)
    PCIE_EDPC_NOTIFY(PC03, BR3D)

    // PC04  PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC04, BR4A)
    PCIE_EDPC_NOTIFY(PC04, BR4B)
    PCIE_EDPC_NOTIFY(PC04, BR4C)
    PCIE_EDPC_NOTIFY(PC04, BR4D)

    // PC05  PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC05, BR5A)
    PCIE_EDPC_NOTIFY(PC05, BR5B)
    PCIE_EDPC_NOTIFY(PC05, BR5C)
    PCIE_EDPC_NOTIFY(PC05, BR5D)

  #if MAX_SOCKET > 1
  // PC07 PCI-Ex eDPC
  // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC07, QR1A)
    PCIE_EDPC_NOTIFY(PC07, QR1B)
    PCIE_EDPC_NOTIFY(PC07, QR1C)
    PCIE_EDPC_NOTIFY(PC07, QR1D)

    // PC08 Port 2A PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC08, QR2A)
    PCIE_EDPC_NOTIFY(PC08, QR2B)
    PCIE_EDPC_NOTIFY(PC08, QR2C)
    PCIE_EDPC_NOTIFY(PC08, QR2D)

    // PC09 PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC09, QR3A)
    PCIE_EDPC_NOTIFY(PC09, QR3B)
    PCIE_EDPC_NOTIFY(PC09, QR3C)
    PCIE_EDPC_NOTIFY(PC09, QR3D)

    // PC08 Port 2A PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC10, QR4A)
    PCIE_EDPC_NOTIFY(PC10, QR4B)
    PCIE_EDPC_NOTIFY(PC10, QR4C)
    PCIE_EDPC_NOTIFY(PC10, QR4D)

    // PC09 PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC11, QR5A)
    PCIE_EDPC_NOTIFY(PC11, QR5B)
    PCIE_EDPC_NOTIFY(PC11, QR5C)
    PCIE_EDPC_NOTIFY(PC11, QR5D)
  #endif
  #if MAX_SOCKET > 2
  // PC13 PCI-Ex eDPC
  // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC13, RR1A)
    PCIE_EDPC_NOTIFY(PC13, RR1B)
    PCIE_EDPC_NOTIFY(PC13, RR1C)
    PCIE_EDPC_NOTIFY(PC13, RR1D)

    // PC14 PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC14, RR2A)
    PCIE_EDPC_NOTIFY(PC14, RR2B)
    PCIE_EDPC_NOTIFY(PC14, RR2C)
    PCIE_EDPC_NOTIFY(PC14, RR2D)

    // PC15 PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC15, RR3A)
    PCIE_EDPC_NOTIFY(PC15, RR3B)
    PCIE_EDPC_NOTIFY(PC15, RR3C)
    PCIE_EDPC_NOTIFY(PC15, RR3D)

    // PC16 PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC16, RR4A)
    PCIE_EDPC_NOTIFY(PC16, RR4B)
    PCIE_EDPC_NOTIFY(PC16, RR4C)
    PCIE_EDPC_NOTIFY(PC16, RR4D)

    // PC17 PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC17, RR5A)
    PCIE_EDPC_NOTIFY(PC17, RR5B)
    PCIE_EDPC_NOTIFY(PC17, RR5C)
    PCIE_EDPC_NOTIFY(PC17, RR5D)
  #endif
  #if MAX_SOCKET > 3
    // PC19 PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC19, SR1A)
    PCIE_EDPC_NOTIFY(PC19, SR1B)
    PCIE_EDPC_NOTIFY(PC19, SR1C)
    PCIE_EDPC_NOTIFY(PC19, SR1D)

    // PC20 PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC20, SR2A)
    PCIE_EDPC_NOTIFY(PC20, SR2B)
    PCIE_EDPC_NOTIFY(PC20, SR2C)
    PCIE_EDPC_NOTIFY(PC20, SR2D)

    // PC21 PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC21, SR3A)
    PCIE_EDPC_NOTIFY(PC21, SR3B)
    PCIE_EDPC_NOTIFY(PC21, SR3C)
    PCIE_EDPC_NOTIFY(PC21, SR3D)

    // PC21 PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC22, SR4A)
    PCIE_EDPC_NOTIFY(PC22, SR4B)
    PCIE_EDPC_NOTIFY(PC22, SR4C)
    PCIE_EDPC_NOTIFY(PC22, SR4D)

    // PC22 PCI-Ex eDPC
    // If this is the eDPC event trigger, notify error eject or bus check
    PCIE_EDPC_NOTIFY(PC23, SR5A)
    PCIE_EDPC_NOTIFY(PC23, SR5B)
    PCIE_EDPC_NOTIFY(PC23, SR5C)
    PCIE_EDPC_NOTIFY(PC23, SR5D)
  #endif
  } //endof the method EDGH
}
