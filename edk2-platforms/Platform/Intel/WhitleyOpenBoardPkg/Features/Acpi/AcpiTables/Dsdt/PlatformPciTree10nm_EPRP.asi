/** @file
  @copyright
  Copyright 2005 - 2020 Intel Corporation. <BR>

  SPDX-License-Identifier: BSD-2-Clause-Patent
**/

#include <MaxSocket.h>

#ifndef CONCATENATE2
#define CONCATENATE2_(a, b) a ## b
#define CONCATENATE2(a, b)  CONCATENATE2_(a, b)
#endif
#ifndef CONCATENATE3
#define CONCATENATE3_(a, b, c) a ## b ## c
#define CONCATENATE3(a, b, c) CONCATENATE3_(a, b, c)
#endif

Scope (\_SB) {

    Name (AR00, Package() {
        // [IIM0]: IIOMISC on PC00
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
        // [CB0A]: CB3DMA on PC00
        // [CB0E]: CB3DMA on PC00
        Package() { 0x0001FFFF, 0, 0, 17 },
        // [CB0B]: CB3DMA on PC00
        // [CB0F]: CB3DMA on PC00
        Package() { 0x0001FFFF, 1, 0, 18 },
        // [CB0C]: CB3DMA on PC00
        // [CB0G]: CB3DMA on PC00
        Package() { 0x0001FFFF, 2, 0, 19 },
        // [CB0D]: CB3DMA on PC00
        // [CB0H]: CB3DMA on PC00
        Package() { 0x0001FFFF, 3, 0, 16 },
        // [MSM1] MSM
        Package() { 0x0002FFFF, 0, 0, 18 },
        // [PMON] PMON MSM
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        // [NRPK]: NorthPeak
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [DMI0]: Legacy PCI Express Port 0 on PC00
        Package() { 0x0003FFFF, 0, 0, 19 },
        // [IHC1]: IE HECI #1
        // [IHC3]: IE HECI #3
        Package() { 0x0010FFFF, 0, 0, 16 },
        // [IHC2]: IE HECI #2
        Package() { 0x0010FFFF, 1, 0, 17 },
        // [IIDR]: IE IDE-Redirection (IDE-R)
        Package() { 0x0010FFFF, 2, 0, 18 },
        // [IMKT]: IE Keyboard and Text (KT) Redirection
        Package() { 0x0010FFFF, 3, 0, 19 },
        // [SAT2]: sSATA Host controller on PCH
        // [MRO0]: MROM 0 function
        // [MRO1]: MROM 1 function
        Package() { 0x0011FFFF, 0, 0, 17 },
        Package() { 0x0011FFFF, 1, 0, 18 },
        Package() { 0x0011FFFF, 2, 0, 19 },
        Package() { 0x0011FFFF, 3, 0, 16 },
        // [XHCI]: xHCI controller 1 on PCH
        Package() { 0x0014FFFF, 0, 0, 16 },
        Package() { 0x0014FFFF, 1, 0, 17 },
        // [TERM]: Thermal Subsystem on PCH
        Package() { 0x0014FFFF, 2, 0, 18 },
        Package() { 0x0014FFFF, 3, 0, 19 },
        // [HEC1]: ME HECI #1 on PCH
        // [HEC3]: ME HECI #3 on PCH
        Package() { 0x0016FFFF, 0, 0, 18 },
        // [HEC2]: ME HECI #2 on PCH
        Package() { 0x0016FFFF, 1, 0, 19 },
        // [IDER]: ME IDE redirect on PCH
        Package() { 0x0016FFFF, 2, 0, 16 },
        // [MEKT]: MEKT on PCH
        Package() { 0x0016FFFF, 3, 0, 17 },
        // [SAT1]: SATA controller 1 on PCH
        Package() { 0x0017FFFF, 0, 0, 19 },
        // [RP17]: PCIE PCH Root Port #17
        Package() { 0x001BFFFF, 0, 0, 19 },
        // [RP18]: PCIE PCH Root Port #18
        Package() { 0x001BFFFF, 1, 0, 16 },
        // [RP19]: PCIE PCH Root Port #19
        Package() { 0x001BFFFF, 2, 0, 17 },
        // [RP20]: PCIE PCH Root Port #20
        Package() { 0x001BFFFF, 3, 0, 18 },
        // [RP01]: PCIE PCH Root Port #1
        // [RP05]: PCIE PCH Root Port #5
        Package() { 0x001CFFFF, 0, 0, 16 },
        // [RP02]: PCIE PCH Root Port #2
        // [RP06]: PCIE PCH Root Port #6
        Package() { 0x001CFFFF, 1, 0, 17 },
        // [RP03]: PCIE PCH Root Port #3
        // [RP07]: PCIE PCH Root Port #7
        Package() { 0x001CFFFF, 2, 0, 18 },
        // [RP04]: PCIE PCH Root Port #4
        // [RP08]: PCIE PCH Root Port #8
        Package() { 0x001CFFFF, 3, 0, 19 },
        // [RP09]: PCIE PCH Root Port #9
        // [RP13]: PCIE PCH Root Port #13
        Package() { 0x001DFFFF, 0, 0, 17 },
        // [RP10]: PCIE PCH Root Port #10
        // [RP14]: PCIE PCH Root Port #14
        Package() { 0x001DFFFF, 1, 0, 18 },
        // [RP11]: PCIE PCH Root Port #11
        // [RP15]: PCIE PCH Root Port #15
        Package() { 0x001DFFFF, 2, 0, 19 },
        // [RP12]: PCIE PCH Root Port #12
        // [RP16]: PCIE PCH Root Port #16
        Package() { 0x001DFFFF, 3, 0, 16 },
        // [P2SB]: P2SB
        // [PMC1]: Power Management Controller on PCH
        // [CAVS]: HD Audio Subsystem Controller on PCH
        // [SMBS]: SMBus controller on PCH
        // [GBE1]: GbE Controller on PCH
        // [TRHB]: Intel Trace Hub on PCH
        Package() { 0x001FFFFF, 3, 0, 19 },
        Package() { 0x001FFFFF, 2, 0, 18 },
        Package() { 0x001FFFFF, 1, 0, 17 },
        Package() { 0x001FFFFF, 0, 0, 16 },
    })

    Name (AR01, Package() {
        // [SLTH]: PCIE PCH Slot #17
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR02, Package() {
        // [SLTI]: PCIE PCH Slot #18
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR03, Package() {
        // [SLTJ]: PCIE PCH Slot #19
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR04, Package() {
        // [SLTK]: PCIE PCH Slot #20
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR05, Package() {
        // [SLT1]: PCIE PCH Slot #1
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR06, Package() {
        // [SLT2]: PCIE PCH Slot #2
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR07, Package() {
        // [SLT3]: PCIE PCH Slot #3
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR08, Package() {
        // [SLT4]: PCIE PCH Slot #4
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR09, Package() {
        // [SLT5]: PCIE PCH Slot #5
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR0A, Package() {
        // [SLT6]: PCIE PCH Slot #6
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR0B, Package() {
        // [SLT7]: PCIE PCH Slot #7
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR0C, Package() {
        // [SLT8]: PCIE PCH Slot #8
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR0D, Package() {
        // [SLT9]: PCIE PCH Slot #9
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR0E, Package() {
        // [SLTA]: PCIE PCH Slot #10
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR0F, Package() {
        // [SLTB]: PCIE PCH Slot #11
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR10, Package() {
        // [SLTC]: PCIE PCH Slot #12
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR11, Package() {
        // [SLTD]: PCIE PCH Slot #13
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR12, Package() {
        // [SLTE]: PCIE PCH Slot #14
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR13, Package() {
        // [SLTF]: PCIE PCH Slot #15
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR14, Package() {
        // [SLTG]: PCIE PCH Slot #16
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR15, Package() {
        // [BR1A]: PCI Express Port 1A on PC01
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [BR1B]: PCI Express Port 1B on PC01
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [BR1C]: PCI Express Port 1C on PC01
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [BR1D]: PCI Express Port 1D on PC01
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR16, Package() {
        // [SL01]: PCI Express Slot 1 on 1A on PC01
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR17, Package() {
        // [SL02]: PCI Express Slot 2 on 1B on PC01
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR18, Package() {
        // [SL03]: PCI Express Slot 3 on 1C on PC01
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR19, Package() {
        // [SL04]: PCI Express Slot 4 on 1D on PC01
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR1A, Package() {
        // [BR2A]: PCI Express Port 2A on PC02
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [BR2B]: PCI Express Port 2B on PC02
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [BR2C]: PCI Express Port 2C on PC02
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [BR2D]: PCI Express Port 2D on PC02
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR1B, Package() {
        // [SL05]: PCI Express Slot 5 on 2A on PC02
        // [EPCU]: EVA PCIe Uplink
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR1C, Package() {
        // [VSP0]: EVA Virtual Switch Port 0
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
        // [VSP1]: EVA Virtual Switch Port 1
        Package() { 0x0001FFFF, 0, 0, 19 },
        // [VSP2]: EVA Virtual Switch Port 2
        Package() { 0x0002FFFF, 0, 0, 16 },
        // [VSP3]: EVA Virtual Switch Port 3
        Package() { 0x0003FFFF, 0, 0, 17 },
    })

    Name (AR1D, Package() {
        // [CPM0]: EVA CPM0
        Package() { 0x0000FFFF, 0, 0, 16 },
    })

    Name (AR1E, Package() {
        // [CPM1]: EVA CPM1
        Package() { 0x0000FFFF, 0, 0, 16 },
    })

    Name (AR1F, Package() {
        // [CPM2]: EVA CPM2
        Package() { 0x0000FFFF, 0, 0, 16 },
    })

    Name (AR20, Package() {
        // [SL06]: PCI Express Slot 6 on 2B on PC02
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR21, Package() {
        // [SL07]: PCI Express Slot 7 on 2C on PC02
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR22, Package() {
        // [SL08]: PCI Express Slot 8 on 2D on PC02
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR23, Package() {
        // [BR3A]: PCI Express Port 3A on PC03
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [BR3B]: PCI Express Port 3B on PC03
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [BR3C]: PCI Express Port 3C on PC03
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [BR3D]: PCI Express Port 3D on PC03
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR24, Package() {
        // [SL09]: PCI Express Slot 9 on 3A on PC03
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR25, Package() {
        // [SL0A]: PCI Express Slot 10 on 3B on PC03
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR26, Package() {
        // [SL0B]: PCI Express Slot 11 on 3C on PC03
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR27, Package() {
        // [SL0C]: PCI Express Slot 12 on 3D on PC03
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR28, Package() {
        // [BR4A]: PCI Express Port 4A on PC04
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [BR4B]: PCI Express Port 4B on PC04
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [BR4C]: PCI Express Port 4C on PC04
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [BR4D]: PCI Express Port 4D on PC04
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR29, Package() {
        // [SL0D]: PCI Express Slot 13 on 4A on PC04
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR2A, Package() {
        // [SL0E]: PCI Express Slot 14 on 4B on PC04
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR2B, Package() {
        // [SL0F]: PCI Express Slot 15 on 4C on PC04
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR2C, Package() {
        // [SL10]: PCI Express Slot 16 on 4D on PC04
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR2D, Package() {
        // [BR5A]: PCI Express Port 5A on PC05
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [BR5B]: PCI Express Port 5B on PC05
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [BR5C]: PCI Express Port 5C on PC05
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [BR5D]: PCI Express Port 5D on PC05
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR2E, Package() {
        // [SL11]: PCI Express Slot 17 on 5A on PC05
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR2F, Package() {
        // [SL12]: PCI Express Slot 18 on 5B on PC05
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR30, Package() {
        // [SL13]: PCI Express Slot 19 on 5C on PC05
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR31, Package() {
        // [SL14]: PCI Express Slot 20 on 5D on PC05
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR32, Package() {
        // [UBX0]: Uncore 0 UBOX Device
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
        // [UP00]: Uncore 0 Misc 2 UPI 0-7 Device
        Package() { 0x0002FFFF, 0, 0, 16 },
        Package() { 0x0002FFFF, 1, 0, 17 },
        Package() { 0x0002FFFF, 2, 0, 18 },
        Package() { 0x0002FFFF, 3, 0, 19 },
        // [UP01]: Unocre 0 Misc 1 UPI 0-7 Device
        Package() { 0x0003FFFF, 0, 0, 16 },
        Package() { 0x0003FFFF, 1, 0, 17 },
        Package() { 0x0003FFFF, 2, 0, 18 },
        Package() { 0x0003FFFF, 3, 0, 19 },
        // [M2U0]: Uncore 0 M2UPI0 Device
        Package() { 0x0005FFFF, 0, 0, 16 },
        Package() { 0x0005FFFF, 1, 0, 17 },
        Package() { 0x0005FFFF, 2, 0, 18 },
        Package() { 0x0005FFFF, 3, 0, 19 },
        // [M2U1]: Uncore 0 M2UPI1 Device
        Package() { 0x0006FFFF, 0, 0, 16 },
        Package() { 0x0006FFFF, 1, 0, 17 },
        Package() { 0x0006FFFF, 2, 0, 18 },
        Package() { 0x0006FFFF, 3, 0, 19 },
        // [M2U2]: Uncore 0 M2UPI2 Device
        Package() { 0x0007FFFF, 0, 0, 16 },
        Package() { 0x0007FFFF, 1, 0, 17 },
        Package() { 0x0007FFFF, 2, 0, 18 },
        Package() { 0x0007FFFF, 3, 0, 19 },
        // [CSM0]: Uncore 0 CHASIS_SMBUS Devices
        Package() { 0x000BFFFF, 0, 0, 16 },
        Package() { 0x000BFFFF, 1, 0, 17 },
        Package() { 0x000BFFFF, 2, 0, 18 },
        Package() { 0x000BFFFF, 3, 0, 19 },
        // [M2M0]: Uncore 0 MS2MEM_SCF_MS2MEM0 Device
        Package() { 0x000CFFFF, 0, 0, 16 },
        Package() { 0x000CFFFF, 1, 0, 17 },
        Package() { 0x000CFFFF, 2, 0, 18 },
        Package() { 0x000CFFFF, 3, 0, 19 },
        // [M2M1]: Uncore 0 MS2MEM_SCF_MS2MEM1 Device
        Package() { 0x000DFFFF, 0, 0, 16 },
        Package() { 0x000DFFFF, 1, 0, 17 },
        Package() { 0x000DFFFF, 2, 0, 18 },
        Package() { 0x000DFFFF, 3, 0, 19 },
        // [MCD0]: Uncore 0 MCDDR0 Device
        Package() { 0x001AFFFF, 0, 0, 16 },
        Package() { 0x001AFFFF, 1, 0, 17 },
        Package() { 0x001AFFFF, 2, 0, 18 },
        Package() { 0x001AFFFF, 3, 0, 19 },
        // [MCD1]: Uncore 0 MCDDR1 Device
        Package() { 0x001BFFFF, 0, 0, 16 },
        Package() { 0x001BFFFF, 1, 0, 17 },
        Package() { 0x001BFFFF, 2, 0, 18 },
        Package() { 0x001BFFFF, 3, 0, 19 },
    })

    Name (AR33, Package() {
        // [CHA0]: Uncore 1 GRP1_CHA0-7 Device
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
        // [CHA1]: Uncore 1 GRP1_CHA8-15 Device
        Package() { 0x0001FFFF, 0, 0, 16 },
        Package() { 0x0001FFFF, 1, 0, 17 },
        Package() { 0x0001FFFF, 2, 0, 18 },
        Package() { 0x0001FFFF, 3, 0, 19 },
        // [CHA2]: Uncore 1 GRP1_CHA16-23 Device
        Package() { 0x0002FFFF, 0, 0, 16 },
        Package() { 0x0002FFFF, 1, 0, 17 },
        Package() { 0x0002FFFF, 2, 0, 18 },
        Package() { 0x0002FFFF, 3, 0, 19 },
        // [CHA3]: Uncore 1 GRP1_CHAU24-31 Device
        Package() { 0x0003FFFF, 0, 0, 16 },
        Package() { 0x0003FFFF, 1, 0, 17 },
        Package() { 0x0003FFFF, 2, 0, 18 },
        Package() { 0x0003FFFF, 3, 0, 19 },
        // [CHA4]: Uncore 1 GRP1_CHA32-33 Device
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [CHA5]: Uncore 1 GRP0_CHA0-7 Device
        Package() { 0x000AFFFF, 0, 0, 16 },
        Package() { 0x000AFFFF, 1, 0, 17 },
        Package() { 0x000AFFFF, 2, 0, 18 },
        Package() { 0x000AFFFF, 3, 0, 19 },
        // [CHA8]: Uncore 1 GRP0_CHA24-31 Device
        Package() { 0x000DFFFF, 0, 0, 16 },
        Package() { 0x000DFFFF, 1, 0, 17 },
        Package() { 0x000DFFFF, 2, 0, 18 },
        Package() { 0x000DFFFF, 3, 0, 19 },
        // [CHA9]: Uncore 1 GRP0_CHA32-33 Device
        Package() { 0x000EFFFF, 0, 0, 16 },
        Package() { 0x000EFFFF, 1, 0, 17 },
        Package() { 0x000EFFFF, 2, 0, 18 },
        Package() { 0x000EFFFF, 3, 0, 19 },
        // [CHA6]: Uncore 1 GRP0_CHA8-15 Device
        Package() { 0x00B0FFFF, 0, 0, 16 },
        Package() { 0x00B0FFFF, 1, 0, 17 },
        Package() { 0x00B0FFFF, 2, 0, 18 },
        Package() { 0x00B0FFFF, 3, 0, 19 },
        // [CHA7]: Uncore 1 GRP0_CHA16-23 Device
        Package() { 0x000CFFFF, 0, 0, 16 },
        Package() { 0x000CFFFF, 1, 0, 17 },
        Package() { 0x000CFFFF, 2, 0, 18 },
        Package() { 0x000CFFFF, 3, 0, 19 },
        // [CA00]: Uncore 1 CHAALL0-1 Device
        Package() { 0x001DFFFF, 0, 0, 16 },
        Package() { 0x001DFFFF, 1, 0, 17 },
        Package() { 0x001DFFFF, 2, 0, 18 },
        Package() { 0x001DFFFF, 3, 0, 19 },
        // [PUC0]: Uncore 1 CHASIS_PUINT0-7 Device
        Package() { 0x001EFFFF, 0, 0, 16 },
        Package() { 0x001EFFFF, 1, 0, 17 },
        Package() { 0x001EFFFF, 2, 0, 18 },
        Package() { 0x001EFFFF, 3, 0, 19 },
        // [GN30]: Uncore 1 Gen3Phy Device
        Package() { 0x001FFFFF, 0, 0, 16 },
        Package() { 0x001FFFFF, 1, 0, 17 },
        Package() { 0x001FFFFF, 2, 0, 18 },
        Package() { 0x001FFFFF, 3, 0, 19 },
    })
#if MAX_SOCKET > 1
    Name (AR34, Package() {
        // [IIM1]: IIOMISC on PC06
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
        // [CB1A]: CB3DMA on PC06
        // [CB1E]: CB3DMA on PC06
        Package() { 0x0001FFFF, 0, 0, 16 },
        // [CB1B]: CB3DMA on PC06
        // [CB1F]: CB3DMA on PC06
        Package() { 0x0001FFFF, 1, 0, 17 },
        // [CB1C]: CB3DMA on PC06
        // [CB1G]: CB3DMA on PC06
        Package() { 0x0001FFFF, 2, 0, 18 },
        // [CB1D]: CB3DMA on PC06
        // [CB1H]: CB3DMA on PC06
        Package() { 0x0001FFFF, 3, 0, 19 },
        // NorthPeak
        Package() { 0x0002FFFF, 0, 0, 18 },
    })

    Name (AR35, Package() {
        // [QR1A]: PCI Express Port 1A on PC07
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [QR1B]: PCI Express Port 1B on PC07
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [QR1C]: PCI Express Port 1C on PC07
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [QR1D]: PCI Express Port 1D on PC07
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR36, Package() {
        // [SL16]: PCI Express Slot 22 on 1A on PC07
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR37, Package() {
        // [SL17]: PCI Express Slot 23 on 1B on PC07
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR38, Package() {
        // [SL18]: PCI Express Slot 24 on 1C on PC07
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR39, Package() {
        // [SL19]: PCI Express Slot 25 on 1D on PC07
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR3A, Package() {
        // [QR2A]: PCI Express Port 2A on PC08
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [QR2B]: PCI Express Port 2B on PC08
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [QR2C]: PCI Express Port 2C on PC08
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [QR2D]: PCI Express Port 2D on PC08
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR3B, Package() {
        // [SL1A]: PCI Express Slot 26 on 2A on PC08
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR3C, Package() {
        // [SL1B]: PCI Express Slot 27 on 2B on PC08
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR3D, Package() {
        // [SL1C]: PCI Express Slot 28 on 2C on PC08
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR3E, Package() {
        // [SL1D]: PCI Express Slot 29 on 2D on PC08
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR3F, Package() {
        // [QR3A]: PCI Express Port 3A on PC09
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [QR3B]: PCI Express Port 3B on PC09
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [QR3C]: PCI Express Port 3C on PC09
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [QR3D]: PCI Express Port 3D on PC09
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR40, Package() {
        // [SL1E]: PCI Express Slot 30 on 3A on PC09
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR41, Package() {
        // [SL1F]: PCI Express Slot 31 on 3B on PC09
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR42, Package() {
        // [SL20]: PCI Express Slot 32 on 3C on PC09
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR43, Package() {
        // [SL21]: PCI Express Slot 33 on 3D on PC09
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR44, Package() {
        // [QR4A]: PCI Express Port 4A on PC10
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [QR4B]: PCI Express Port 4B on PC10
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [QR4C]: PCI Express Port 4C on PC10
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [QR4D]: PCI Express Port 4D on PC10
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR45, Package() {
        // [SL22]: PCI Express Slot 34 on 4A on PC10
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR46, Package() {
        // [SL23]: PCI Express Slot 35 on 4B on PC10
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR47, Package() {
        // [SL24]: PCI Express Slot 36 on 4C on PC10
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR48, Package() {
        // [SL25]: PCI Express Slot 37 on 4D on PC10
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR49, Package() {
        // [QR5A]: PCI Express Port 5A on PC11
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [QR5B]: PCI Express Port 5B on PC11
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [QR5C]: PCI Express Port 5C on PC11
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [QR5D]: PCI Express Port 5D on PC11
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR4A, Package() {
        // [SL26]: PCI Express Slot 38 on 5A on PC11
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR4B, Package() {
        // [SL27]: PCI Express Slot 39 on 5B on PC11
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR4C, Package() {
        // [SL28]: PCI Express Slot 40 on 5C on PC11
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR4D, Package() {
        // [SL29]: PCI Express Slot 41 on 5D on PC11
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR4E, Package() {
        // [UBX1]: Uncore 2 UBOX Device
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
        // [UP02]: Uncore 2 Misc 2 UPI 0-7 Device
        Package() { 0x0002FFFF, 0, 0, 16 },
        Package() { 0x0002FFFF, 1, 0, 17 },
        Package() { 0x0002FFFF, 2, 0, 18 },
        Package() { 0x0002FFFF, 3, 0, 19 },
        // [UP03]: Uncore 2 Misc 1 UPI 0-7 Device
        Package() { 0x0003FFFF, 0, 0, 16 },
        Package() { 0x0003FFFF, 1, 0, 17 },
        Package() { 0x0003FFFF, 2, 0, 18 },
        Package() { 0x0003FFFF, 3, 0, 19 },
        // [M2U3]: Uncore 2 M2UPI0 Device
        Package() { 0x0005FFFF, 0, 0, 16 },
        Package() { 0x0005FFFF, 1, 0, 17 },
        Package() { 0x0005FFFF, 2, 0, 18 },
        Package() { 0x0005FFFF, 3, 0, 19 },
        // [M2U4]: Uncore 2 M2UPI1 Device
        Package() { 0x0006FFFF, 0, 0, 16 },
        Package() { 0x0006FFFF, 1, 0, 17 },
        Package() { 0x0006FFFF, 2, 0, 18 },
        Package() { 0x0006FFFF, 3, 0, 19 },
        // [M2U5]: Uncore 2 M2UPI2 Device
        Package() { 0x0007FFFF, 0, 0, 16 },
        Package() { 0x0007FFFF, 1, 0, 17 },
        Package() { 0x0007FFFF, 2, 0, 18 },
        Package() { 0x0007FFFF, 3, 0, 19 },
        // [CSM1]: Uncore 2 CHASIS_SMBUS Devices
        Package() { 0x000BFFFF, 0, 0, 16 },
        Package() { 0x000BFFFF, 1, 0, 17 },
        Package() { 0x000BFFFF, 2, 0, 18 },
        Package() { 0x000BFFFF, 3, 0, 19 },
        // [M2M2]: Uncore 2 MS2MEM_SCF_MS2MEM0 Device
        Package() { 0x000CFFFF, 0, 0, 16 },
        Package() { 0x000CFFFF, 1, 0, 17 },
        Package() { 0x000CFFFF, 2, 0, 18 },
        Package() { 0x000CFFFF, 3, 0, 19 },
        // [M2M3]: Uncore 2 MS2MEM_SCF_MS2MEM1 Device
        Package() { 0x000DFFFF, 0, 0, 16 },
        Package() { 0x000DFFFF, 1, 0, 17 },
        Package() { 0x000DFFFF, 2, 0, 18 },
        Package() { 0x000DFFFF, 3, 0, 19 },
        // [MCD2]: Uncore 2 MCDDR0 Device
        Package() { 0x001AFFFF, 0, 0, 16 },
        Package() { 0x001AFFFF, 1, 0, 17 },
        Package() { 0x001AFFFF, 2, 0, 18 },
        Package() { 0x001AFFFF, 3, 0, 19 },
        // [MCD3]: Uncore 2 MCDDR1 Device
        Package() { 0x001BFFFF, 0, 0, 16 },
        Package() { 0x001BFFFF, 1, 0, 17 },
        Package() { 0x001BFFFF, 2, 0, 18 },
        Package() { 0x001BFFFF, 3, 0, 19 },
    })

    Name (AR4F, Package() {
        // [DHA0]: Uncore 3 GRP1_CHA0-7 Device
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
        // [DHA1]: Uncore 3 GRP1_CHA8-15 Device
        Package() { 0x0001FFFF, 0, 0, 16 },
        Package() { 0x0001FFFF, 1, 0, 17 },
        Package() { 0x0001FFFF, 2, 0, 18 },
        Package() { 0x0001FFFF, 3, 0, 19 },
        // [DHA2]: Uncore 3 GRP1_CHA16-23 Device
        Package() { 0x0002FFFF, 0, 0, 16 },
        Package() { 0x0002FFFF, 1, 0, 17 },
        Package() { 0x0002FFFF, 2, 0, 18 },
        Package() { 0x0002FFFF, 3, 0, 19 },
        // [DHA3]: Uncore 3 GRP1_CHAU24-31 Device
        Package() { 0x0003FFFF, 0, 0, 16 },
        Package() { 0x0003FFFF, 1, 0, 17 },
        Package() { 0x0003FFFF, 2, 0, 18 },
        Package() { 0x0003FFFF, 3, 0, 19 },
        // [DHA4]: Uncore 3 GRP1_CHA32-33 Device
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [DHA5]: Uncore 3 GRP0_CHA0-7 Device
        Package() { 0x000AFFFF, 0, 0, 16 },
        Package() { 0x000AFFFF, 1, 0, 17 },
        Package() { 0x000AFFFF, 2, 0, 18 },
        Package() { 0x000AFFFF, 3, 0, 19 },
        // [DHA8]: Uncore 3 GRP0_CHA24-31 Device
        Package() { 0x000DFFFF, 0, 0, 16 },
        Package() { 0x000DFFFF, 1, 0, 17 },
        Package() { 0x000DFFFF, 2, 0, 18 },
        Package() { 0x000DFFFF, 3, 0, 19 },
        // [DHA9]: Uncore 3 GRP0_CHA32-33 Device
        Package() { 0x000EFFFF, 0, 0, 16 },
        Package() { 0x000EFFFF, 1, 0, 17 },
        Package() { 0x000EFFFF, 2, 0, 18 },
        Package() { 0x000EFFFF, 3, 0, 19 },
        // [DHA6]: Uncore 3 GRP0_CHA8-15 Device
        Package() { 0x00B0FFFF, 0, 0, 16 },
        Package() { 0x00B0FFFF, 1, 0, 17 },
        Package() { 0x00B0FFFF, 2, 0, 18 },
        Package() { 0x00B0FFFF, 3, 0, 19 },
        // [DHA7]: Uncore 3 GRP0_CHA16-23 Device
        Package() { 0x000CFFFF, 0, 0, 16 },
        Package() { 0x000CFFFF, 1, 0, 17 },
        Package() { 0x000CFFFF, 2, 0, 18 },
        Package() { 0x000CFFFF, 3, 0, 19 },
        // [CA01]: Uncore 3 CHAALL0-1 Device
        Package() { 0x001DFFFF, 0, 0, 16 },
        Package() { 0x001DFFFF, 1, 0, 17 },
        Package() { 0x001DFFFF, 2, 0, 18 },
        Package() { 0x001DFFFF, 3, 0, 19 },
        // [PUC1]: Uncore 3 CHASIS_PUINT0-7 Device
        Package() { 0x001EFFFF, 0, 0, 16 },
        Package() { 0x001EFFFF, 1, 0, 17 },
        Package() { 0x001EFFFF, 2, 0, 18 },
        Package() { 0x001EFFFF, 3, 0, 19 },
        // [GN31]: Uncore 3 Gen3Phy Device
        Package() { 0x001FFFFF, 0, 0, 16 },
        Package() { 0x001FFFFF, 1, 0, 17 },
        Package() { 0x001FFFFF, 2, 0, 18 },
        Package() { 0x001FFFFF, 3, 0, 19 },
    })
#endif

#if MAX_SOCKET > 2
    Name (AR50, Package() {
        // [IIM2]: IIOMISC on PC12
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
        // [CB2A]: CB3DMA on PC12
        // [CB2E]: CB3DMA on PC12
        Package() { 0x0001FFFF, 0, 0, 16 },
        // [CB2B]: CB3DMA on PC12
        // [CB2F]: CB3DMA on PC12
        Package() { 0x0001FFFF, 1, 0, 17 },
        // [CB2C]: CB3DMA on PC12
        // [CB2G]: CB3DMA on PC12
        Package() { 0x0001FFFF, 2, 0, 18 },
        // [CB2D]: CB3DMA on PC12
        // [CB2H]: CB3DMA on PC12
        Package() { 0x0001FFFF, 3, 0, 19 },
        // NorthPeak
        Package() { 0x0002FFFF, 0, 0, 18 },
    })

    Name (AR51, Package() {
        // [RR1A]: PCI Express Port 1A on PC13
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [RR1B]: PCI Express Port 1B on PC13
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [RR1C]: PCI Express Port 1C on PC13
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [RR1D]: PCI Express Port 1D on PC13
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR52, Package() {
        // [SL2B]: PCI Express Slot 43 on 1A on PC13
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR53, Package() {
        // [SL2C]: PCI Express Slot 44 on 1B on PC13
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR54, Package() {
        // [SL2D]: PCI Express Slot 45 on 1C on PC13
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR55, Package() {
        // [SL2E]: PCI Express Slot 46 on 1D on PC13
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR56, Package() {
        // [RR2A]: PCI Express Port 2A on PC14
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [RR2B]: PCI Express Port 2B on PC14
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [RR2C]: PCI Express Port 2C on PC14
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [RR2D]: PCI Express Port 2D on PC14
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR57, Package() {
        // [SL2F]: PCI Express Slot 47 on 2A on PC14
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR58, Package() {
        // [SL30]: PCI Express Slot 48 on 2B on PC14
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR59, Package() {
        // [SL31]: PCI Express Slot 49 on 2C on PC14
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR5A, Package() {
        // [SL32]: PCI Express Slot 50 on 2D on PC14
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR5B, Package() {
        // [RR3A]: PCI Express Port 3A on PC15
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [RR3B]: PCI Express Port 3B on PC15
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [RR3C]: PCI Express Port 3C on PC15
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [RR3D]: PCI Express Port 3D on PC15
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR5C, Package() {
        // [SL33]: PCI Express Slot 51 on 3A on PC15
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR5D, Package() {
        // [SL34]: PCI Express Slot 52 on 3B on PC15
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR5E, Package() {
        // [SL35]: PCI Express Slot 53 on 3C on PC15
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR5F, Package() {
        // [SL36]: PCI Express Slot 54 on 3D on PC15
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR60, Package() {
        // [RR4A]: PCI Express Port 4A on PC16
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [RR4B]: PCI Express Port 4B on PC16
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [RR4C]: PCI Express Port 4C on PC16
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [RR4D]: PCI Express Port 4D on PC16
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR61, Package() {
        // [SL37]: PCI Express Slot 55 on 4A on PC16
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR62, Package() {
        // [SL38]: PCI Express Slot 56 on 4B on PC16
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR63, Package() {
        // [SL39]: PCI Express Slot 57 on 4C on PC16
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR64, Package() {
        // [SL3A]: PCI Express Slot 58 on 4D on PC16
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR65, Package() {
        // [RR5A]: PCI Express Port 5A on PC17
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [RR5B]: PCI Express Port 5B on PC17
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [RR5C]: PCI Express Port 5C on PC17
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [RR5D]: PCI Express Port 5D on PC17
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR66, Package() {
        // [SL3B]: PCI Express Slot 59 on 5A on PC17
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR67, Package() {
        // [SL3C]: PCI Express Slot 60 on 5B on PC17
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR68, Package() {
        // [SL3D]: PCI Express Slot 61 on 5C on PC17
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR69, Package() {
        // [SL3E]: PCI Express Slot 62 on 5D on PC17
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR6A, Package() {
        // [UBX2]: Uncore 4 UBOX Device
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
        // [UP04]: Uncore 4 Misc 2 UPI 0-7 Device
        Package() { 0x0002FFFF, 0, 0, 16 },
        Package() { 0x0002FFFF, 1, 0, 17 },
        Package() { 0x0002FFFF, 2, 0, 18 },
        Package() { 0x0002FFFF, 3, 0, 19 },
        // [UP05]: Uncore 4 Misc 1 UPI 0-7 Device
        Package() { 0x0003FFFF, 0, 0, 16 },
        Package() { 0x0003FFFF, 1, 0, 17 },
        Package() { 0x0003FFFF, 2, 0, 18 },
        Package() { 0x0003FFFF, 3, 0, 19 },
        // [M2U6]: Uncore 4 M2UPI Device
        Package() { 0x0005FFFF, 0, 0, 16 },
        Package() { 0x0005FFFF, 1, 0, 17 },
        Package() { 0x0005FFFF, 2, 0, 18 },
        Package() { 0x0005FFFF, 3, 0, 19 },
        // [M2U7]: Uncore 4 M2UPI Device
        Package() { 0x0006FFFF, 0, 0, 16 },
        Package() { 0x0006FFFF, 1, 0, 17 },
        Package() { 0x0006FFFF, 2, 0, 18 },
        Package() { 0x0006FFFF, 3, 0, 19 },
        // [M2U8]: Uncore 4 M2UPI Device
        Package() { 0x0007FFFF, 0, 0, 16 },
        Package() { 0x0007FFFF, 1, 0, 17 },
        Package() { 0x0007FFFF, 2, 0, 18 },
        Package() { 0x0007FFFF, 3, 0, 19 },
        // [CSM2]: Uncore 4 CHASIS_SMBUS Devices
        Package() { 0x000BFFFF, 0, 0, 16 },
        Package() { 0x000BFFFF, 1, 0, 17 },
        Package() { 0x000BFFFF, 2, 0, 18 },
        Package() { 0x000BFFFF, 3, 0, 19 },
        // [M2M4]: Uncore 4 MS2MEM_SCF_MS2MEM0 Device
        Package() { 0x000CFFFF, 0, 0, 16 },
        Package() { 0x000CFFFF, 1, 0, 17 },
        Package() { 0x000CFFFF, 2, 0, 18 },
        Package() { 0x000CFFFF, 3, 0, 19 },
        // [M2M5]: Uncore 4 MS2MEM_SCF_MS2MEM1 Device
        Package() { 0x000DFFFF, 0, 0, 16 },
        Package() { 0x000DFFFF, 1, 0, 17 },
        Package() { 0x000DFFFF, 2, 0, 18 },
        Package() { 0x000DFFFF, 3, 0, 19 },
        // [MCD4]: Uncore 4 MCDDR0 Device
        Package() { 0x001AFFFF, 0, 0, 16 },
        Package() { 0x001AFFFF, 1, 0, 17 },
        Package() { 0x001AFFFF, 2, 0, 18 },
        Package() { 0x001AFFFF, 3, 0, 19 },
        // [MCD5]: Uncore 4 MCDDR1 Device
        Package() { 0x001BFFFF, 0, 0, 16 },
        Package() { 0x001BFFFF, 1, 0, 17 },
        Package() { 0x001BFFFF, 2, 0, 18 },
        Package() { 0x001BFFFF, 3, 0, 19 },
    })

    Name (AR6B, Package() {
        // [EHA0]: Uncore 5 GRP1_CHA0-7 Device
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
        // [EHA1]: Uncore 5 GRP1_CHA8-15 Device
        Package() { 0x0001FFFF, 0, 0, 16 },
        Package() { 0x0001FFFF, 1, 0, 17 },
        Package() { 0x0001FFFF, 2, 0, 18 },
        Package() { 0x0001FFFF, 3, 0, 19 },
        // [EHA2]: Uncore 5 GRP1_CHA16-23 Device
        Package() { 0x0002FFFF, 0, 0, 16 },
        Package() { 0x0002FFFF, 1, 0, 17 },
        Package() { 0x0002FFFF, 2, 0, 18 },
        Package() { 0x0002FFFF, 3, 0, 19 },
        // [EHA3]: Uncore 5 GRP1_CHAU24-31 Device
        Package() { 0x0003FFFF, 0, 0, 16 },
        Package() { 0x0003FFFF, 1, 0, 17 },
        Package() { 0x0003FFFF, 2, 0, 18 },
        Package() { 0x0003FFFF, 3, 0, 19 },
        // [EHA4]: Uncore 5 GRP1_CHA32-33 Device
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [EHA5]: Uncore 5 GRP0_CHA0-7 Device
        Package() { 0x000AFFFF, 0, 0, 16 },
        Package() { 0x000AFFFF, 1, 0, 17 },
        Package() { 0x000AFFFF, 2, 0, 18 },
        Package() { 0x000AFFFF, 3, 0, 19 },
        // [EHA8]: Uncore 5 GRP0_CHA24-31 Device
        Package() { 0x000DFFFF, 0, 0, 16 },
        Package() { 0x000DFFFF, 1, 0, 17 },
        Package() { 0x000DFFFF, 2, 0, 18 },
        Package() { 0x000DFFFF, 3, 0, 19 },
        // [EHA9]: Uncore 5 GRP0_CHA32-33 Device
        Package() { 0x000EFFFF, 0, 0, 16 },
        Package() { 0x000EFFFF, 1, 0, 17 },
        Package() { 0x000EFFFF, 2, 0, 18 },
        Package() { 0x000EFFFF, 3, 0, 19 },
        // [EHA6]: Uncore 5 GRP0_CHA8-15 Device
        Package() { 0x00B0FFFF, 0, 0, 16 },
        Package() { 0x00B0FFFF, 1, 0, 17 },
        Package() { 0x00B0FFFF, 2, 0, 18 },
        Package() { 0x00B0FFFF, 3, 0, 19 },
        // [EHA7]: Uncore 5 GRP0_CHA16-23 Device
        Package() { 0x000CFFFF, 0, 0, 16 },
        Package() { 0x000CFFFF, 1, 0, 17 },
        Package() { 0x000CFFFF, 2, 0, 18 },
        Package() { 0x000CFFFF, 3, 0, 19 },
        // [CA02]: Uncore 5 CHAALL0-1 Device
        Package() { 0x001DFFFF, 0, 0, 16 },
        Package() { 0x001DFFFF, 1, 0, 17 },
        Package() { 0x001DFFFF, 2, 0, 18 },
        Package() { 0x001DFFFF, 3, 0, 19 },
        // [PUC2]: Uncore 5 CHASIS_PUINT0-7 Device
        Package() { 0x001EFFFF, 0, 0, 16 },
        Package() { 0x001EFFFF, 1, 0, 17 },
        Package() { 0x001EFFFF, 2, 0, 18 },
        Package() { 0x001EFFFF, 3, 0, 19 },
        // [GN32]: Uncore 5 Gen3Phy Device
        Package() { 0x001FFFFF, 0, 0, 16 },
        Package() { 0x001FFFFF, 1, 0, 17 },
        Package() { 0x001FFFFF, 2, 0, 18 },
        Package() { 0x001FFFFF, 3, 0, 19 },
    })
#endif

#if MAX_SOCKET > 3
    Name (AR6C, Package() {
        // [IIM3]: IIOMISC on PC18
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
        // [CB3A]: CB3DMA on PC18
        // [CB3E]: CB3DMA on PC18
        Package() { 0x0001FFFF, 0, 0, 16 },
        // [CB3B]: CB3DMA on PC18
        // [CB3F]: CB3DMA on PC18
        Package() { 0x0001FFFF, 1, 0, 17 },
        // [CB3C]: CB3DMA on PC18
        // [CB3G]: CB3DMA on PC18
        Package() { 0x0001FFFF, 2, 0, 18 },
        // [CB3D]: CB3DMA on PC18
        // [CB3H]: CB3DMA on PC18
        Package() { 0x0001FFFF, 3, 0, 19 },
        // NorthPeak
        Package() { 0x0002FFFF, 0, 0, 18 },
    })

    Name (AR6D, Package() {
        // [SR1A]: PCI Express Port 1A on PC19
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [SR1B]: PCI Express Port 1B on PC19
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [SR1C]: PCI Express Port 1C on PC19
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [SR1D]: PCI Express Port 1D on PC19
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR6E, Package() {
        // [SL40]: PCI Express Slot 64 on 1A on PC19
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR6F, Package() {
        // [SL41]: PCI Express Slot 65 on 1B on  PC19
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR70, Package() {
        // [SL42]: PCI Express Slot 66 on 1C on  PC19
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR71, Package() {
        // [SL43]: PCI Express Slot 67 on 1D on  PC19
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR72, Package() {
        // [SR2A]: PCI Express Port 2A on  PC20
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [SR2B]: PCI Express Port 2B on PC20
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [SR2C]: PCI Express Port 2C on PC20
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [SR2D]: PCI Express Port 2D on PC20
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR73, Package() {
        // [SL44]: PCI Express Slot 68 on 2A on PC20
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR74, Package() {
        // [SL45]: PCI Express Slot 69 on 2B on PC20
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR75, Package() {
        // [SL46]: PCI Express Slot 70 on 2C on PC20
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR76, Package() {
        // [SL47]: PCI Express Slot 71 on 2D on PC20
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR77, Package() {
        // [SR3A]: PCI Express Port 3A on PC21
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [SR3B]: PCI Express Port 3B on PC21
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [SR3C]: PCI Express Port 3C on PC21
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [SR3D]: PCI Express Port 3D on PC21
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR78, Package() {
        // [SL48]: PCI Express Slot 72 on 3A on PC21
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR79, Package() {
        // [SL49]: PCI Express Slot 73 on 3B on PC21
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR7A, Package() {
        // [SL4A]: PCI Express Slot 74 on 3C on PC21
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR7B, Package() {
        // [SL4B]: PCI Express Slot 75 on 3D on PC21
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR7C, Package() {
        // [SR4A]: PCI Express Port 4A on PC22
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [SR4B]: PCI Express Port 4B on PC22
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [SR4C]: PCI Express Port 4C on PC22
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [SR4D]: PCI Express Port 4D on PC22
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR7D, Package() {
        // [SL4C]: PCI Express Slot 76 on 4A on PC22
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR7E, Package() {
        // [SL4D]: PCI Express Slot 77 on 4B on PC22
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR7F, Package() {
        // [SL4D]: PCI Express Slot 78 on 4C on PC22
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR80, Package() {
        // [SL4E]: PCI Express Slot 79 on 4D on PC22
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR81, Package() {
        // [SR5A]: PCI Express Port 5A on PC23
        Package() { 0x0002FFFF, 0, 0, 18 },
        Package() { 0x0002FFFF, 1, 0, 19 },
        Package() { 0x0002FFFF, 2, 0, 16 },
        Package() { 0x0002FFFF, 3, 0, 17 },
        // [SR5B]: PCI Express Port 5B on PC23
        Package() { 0x0003FFFF, 0, 0, 19 },
        Package() { 0x0003FFFF, 1, 0, 16 },
        Package() { 0x0003FFFF, 2, 0, 17 },
        Package() { 0x0003FFFF, 3, 0, 18 },
        // [SR5C]: PCI Express Port 5C on PC23
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [SR5D]: PCI Express Port 5D on PC23
        Package() { 0x0005FFFF, 0, 0, 17 },
        Package() { 0x0005FFFF, 1, 0, 18 },
        Package() { 0x0005FFFF, 2, 0, 19 },
        Package() { 0x0005FFFF, 3, 0, 16 },
    })

    Name (AR82, Package() {
        // [SL4F]: PCI Express Slot 80 on 5A on PC23
        Package() { 0x0000FFFF, 0, 0, 18 },
        Package() { 0x0000FFFF, 1, 0, 19 },
        Package() { 0x0000FFFF, 2, 0, 16 },
        Package() { 0x0000FFFF, 3, 0, 17 },
    })

    Name (AR83, Package() {
        // [SL50]: PCI Express Slot 81 on 5B on PC23
        Package() { 0x0000FFFF, 0, 0, 19 },
        Package() { 0x0000FFFF, 1, 0, 16 },
        Package() { 0x0000FFFF, 2, 0, 17 },
        Package() { 0x0000FFFF, 3, 0, 18 },
    })

    Name (AR84, Package() {
        // [SL51]: PCI Express Slot 82 on 5C on PC23
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
    })

    Name (AR85, Package() {
        // [SL52]: PCI Express Slot 83 on 5D on PC23
        Package() { 0x0000FFFF, 0, 0, 17 },
        Package() { 0x0000FFFF, 1, 0, 18 },
        Package() { 0x0000FFFF, 2, 0, 19 },
        Package() { 0x0000FFFF, 3, 0, 16 },
    })

    Name (AR86, Package() {
        // [UBX3]: Uncore 6 UBOX Device
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
        // [UP06]: Uncore 6 Misc 2 UPI 0-7 Device
        Package() { 0x0002FFFF, 0, 0, 16 },
        Package() { 0x0002FFFF, 1, 0, 17 },
        Package() { 0x0002FFFF, 2, 0, 18 },
        Package() { 0x0002FFFF, 3, 0, 19 },
        // [UP07]: Uncore 6 Misc 1 UPI 0-7 Device
        Package() { 0x0003FFFF, 0, 0, 16 },
        Package() { 0x0003FFFF, 1, 0, 17 },
        Package() { 0x0003FFFF, 2, 0, 18 },
        Package() { 0x0003FFFF, 3, 0, 19 },
        // [M2U9]: Uncore 6 M2UPI0 Device
        Package() { 0x0005FFFF, 0, 0, 16 },
        Package() { 0x0005FFFF, 1, 0, 17 },
        Package() { 0x0005FFFF, 2, 0, 18 },
        Package() { 0x0005FFFF, 3, 0, 19 },
        // [M2UA]: Uncore 6 M2UPI1 Device
        Package() { 0x0006FFFF, 0, 0, 16 },
        Package() { 0x0006FFFF, 1, 0, 17 },
        Package() { 0x0006FFFF, 2, 0, 18 },
        Package() { 0x0006FFFF, 3, 0, 19 },
        // [M2UB]: Uncore 6 M2UPI2 Device
        Package() { 0x0007FFFF, 0, 0, 16 },
        Package() { 0x0007FFFF, 1, 0, 17 },
        Package() { 0x0007FFFF, 2, 0, 18 },
        Package() { 0x0007FFFF, 3, 0, 19 },
        // [CSM3]: Uncore 6 CHASIS_SMBUS Devices
        Package() { 0x000BFFFF, 0, 0, 16 },
        Package() { 0x000BFFFF, 1, 0, 17 },
        Package() { 0x000BFFFF, 2, 0, 18 },
        Package() { 0x000BFFFF, 3, 0, 19 },
        // [M2M6]: Uncore 6 MS2MEM_SCF_MS2MEM0 Device
        Package() { 0x000CFFFF, 0, 0, 16 },
        Package() { 0x000CFFFF, 1, 0, 17 },
        Package() { 0x000CFFFF, 2, 0, 18 },
        Package() { 0x000CFFFF, 3, 0, 19 },
        // [M2M7]: Uncore 6 MS2MEM_SCF_MS2MEM1 Device
        Package() { 0x000DFFFF, 0, 0, 16 },
        Package() { 0x000DFFFF, 1, 0, 17 },
        Package() { 0x000DFFFF, 2, 0, 18 },
        Package() { 0x000DFFFF, 3, 0, 19 },
        // [MCD6]: Uncore 6 MCDDR0 Device
        Package() { 0x001AFFFF, 0, 0, 16 },
        Package() { 0x001AFFFF, 1, 0, 17 },
        Package() { 0x001AFFFF, 2, 0, 18 },
        Package() { 0x001AFFFF, 3, 0, 19 },
        // [MCD7]: Uncore 6 MCDDR1 Device
        Package() { 0x001BFFFF, 0, 0, 16 },
        Package() { 0x001BFFFF, 1, 0, 17 },
        Package() { 0x001BFFFF, 2, 0, 18 },
        Package() { 0x001BFFFF, 3, 0, 19 },
    })

    Name (AR87, Package() {
        // [FHA0]: Uncore 7 GRP1_CHA0-7 Device
        Package() { 0x0000FFFF, 0, 0, 16 },
        Package() { 0x0000FFFF, 1, 0, 17 },
        Package() { 0x0000FFFF, 2, 0, 18 },
        Package() { 0x0000FFFF, 3, 0, 19 },
        // [FHA1]: Uncore 7 GRP1_CHA8-15 Device
        Package() { 0x0001FFFF, 0, 0, 16 },
        Package() { 0x0001FFFF, 1, 0, 17 },
        Package() { 0x0001FFFF, 2, 0, 18 },
        Package() { 0x0001FFFF, 3, 0, 19 },
        // [FHA2]: Uncore 7 GRP1_CHA16-23 Device
        Package() { 0x0002FFFF, 0, 0, 16 },
        Package() { 0x0002FFFF, 1, 0, 17 },
        Package() { 0x0002FFFF, 2, 0, 18 },
        Package() { 0x0002FFFF, 3, 0, 19 },
        // [FHA3]: Uncore 7 GRP1_CHAU24-31 Device
        Package() { 0x0003FFFF, 0, 0, 16 },
        Package() { 0x0003FFFF, 1, 0, 17 },
        Package() { 0x0003FFFF, 2, 0, 18 },
        Package() { 0x0003FFFF, 3, 0, 19 },
        // [FHA4]: Uncore 7 GRP1_CHA32-33 Device
        Package() { 0x0004FFFF, 0, 0, 16 },
        Package() { 0x0004FFFF, 1, 0, 17 },
        Package() { 0x0004FFFF, 2, 0, 18 },
        Package() { 0x0004FFFF, 3, 0, 19 },
        // [FHA5]: Uncore 7 GRP0_CHA0-7 Device
        Package() { 0x000AFFFF, 0, 0, 16 },
        Package() { 0x000AFFFF, 1, 0, 17 },
        Package() { 0x000AFFFF, 2, 0, 18 },
        Package() { 0x000AFFFF, 3, 0, 19 },
        // [FHA8]: Uncore 7 GRP0_CHA24-31 Device
        Package() { 0x000DFFFF, 0, 0, 16 },
        Package() { 0x000DFFFF, 1, 0, 17 },
        Package() { 0x000DFFFF, 2, 0, 18 },
        Package() { 0x000DFFFF, 3, 0, 19 },
        // [FHA9]: Uncore 7 GRP0_CHA32-33 Device
        Package() { 0x000EFFFF, 0, 0, 16 },
        Package() { 0x000EFFFF, 1, 0, 17 },
        Package() { 0x000EFFFF, 2, 0, 18 },
        Package() { 0x000EFFFF, 3, 0, 19 },
        // [FHA6]: Uncore 7 GRP0_CHA8-15 Device
        Package() { 0x00B0FFFF, 0, 0, 16 },
        Package() { 0x00B0FFFF, 1, 0, 17 },
        Package() { 0x00B0FFFF, 2, 0, 18 },
        Package() { 0x00B0FFFF, 3, 0, 19 },
        // [FHA7]: Uncore 7 GRP0_CHA16-23 Device
        Package() { 0x000CFFFF, 0, 0, 16 },
        Package() { 0x000CFFFF, 1, 0, 17 },
        Package() { 0x000CFFFF, 2, 0, 18 },
        Package() { 0x000CFFFF, 3, 0, 19 },
        // [CA03]: Uncore 7 CHAALL0-1 Device
        Package() { 0x001DFFFF, 0, 0, 16 },
        Package() { 0x001DFFFF, 1, 0, 17 },
        Package() { 0x001DFFFF, 2, 0, 18 },
        Package() { 0x001DFFFF, 3, 0, 19 },
        // [PUC3]: Uncore 7 CHASIS_PUINT0-7 Device
        Package() { 0x001EFFFF, 0, 0, 16 },
        Package() { 0x001EFFFF, 1, 0, 17 },
        Package() { 0x001EFFFF, 2, 0, 18 },
        Package() { 0x001EFFFF, 3, 0, 19 },
        // [GN33]: Uncore 7 Gen3Phy Device
        Package() { 0x001FFFFF, 0, 0, 16 },
        Package() { 0x001FFFFF, 1, 0, 17 },
        Package() { 0x001FFFFF, 2, 0, 18 },
        Package() { 0x001FFFFF, 3, 0, 19 },
    })
#endif
    Name (AR88, Package() {
        // [FPG0]: FPGA Device
        Package() { 0x0000FFFF, 0, 0, 16 },
    })

#if MAX_SOCKET > 1
    Name (AR89, Package() {
        // [FPG1]: FPGA Device
        Package() { 0x0000FFFF, 1, 0, 17 },
    })
#endif

#if MAX_SOCKET > 2
    Name (AR8A, Package() {
        // [FPG2]: FPGA Device
        Package() { 0x0000FFFF, 2, 0, 18 },
    })
#endif

#if MAX_SOCKET > 3
    Name (AR8B, Package() {
        // [FPG3]: FPGA Device
        Package() { 0x0000FFFF, 3, 0, 19 },
    })
#endif
    //
    // Socket 0 Root bridge (Stack 0)
    //
#undef SOCKET
#undef STACK
#define SOCKET 0
#define STACK  0
    Device (PC00) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x00)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR00)
        }

        #include "PC0010nm.asi"

        // IIOMISC on PC00
        Device (IIM0) {
            Name   (_ADR, 0x00000000)
        }

        // CB3DMA on PC00
        Device (CB0A) {
            Name   (_ADR, 0x00010000)
        }

        // CB3DMA on PC00
        Device (CB0B) {
            Name   (_ADR, 0x00010001)
        }

        // CB3DMA on PC00
        Device (CB0C) {
            Name   (_ADR, 0x00010002)
        }

        // CB3DMA on PC00
        Device (CB0D) {
            Name   (_ADR, 0x00010003)
        }

        // CB3DMA on PC00
        Device (CB0E) {
            Name   (_ADR, 0x00010004)
        }

        // CB3DMA on PC00
        Device (CB0F) {
            Name   (_ADR, 0x00010005)
        }

        // CB3DMA on PC00
        Device (CB0G) {
            Name   (_ADR, 0x00010006)
        }

        // CB3DMA on PC00
        Device (CB0H) {
            Name   (_ADR, 0x00010007)
        }

        // MSM on PC00
        Device (MSM1) {
            Name   (_ADR, 0x00020000)
        }

        // PMON MSM on PC00
        Device (PMON) {
            Name   (_ADR, 0x00020001)
        }

        // NorthPeak on PC00
        Device (NRPK) {
            Name   (_ADR, 0x00020004)
        }

        // Legacy PCI Express Port 0 on PC00
        Device (DMI0) {
            Name   (_ADR, 0x00030000)
        }

        // IE HECI #1
        Device (IHC1) {
            Name   (_ADR, 0x00100000)
        }

        // IE HECI #2
        Device (IHC2) {
            Name   (_ADR, 0x00100001)
        }

        // IE IDE-Redirection (IDE-R)
        Device (IIDR) {
            Name   (_ADR, 0x00100002)
        }

        // IE Keyboard and Text (KT) Redirection
        Device (IMKT) {
            Name   (_ADR, 0x00100003)
        }

        // IE HECI #3
        Device (IHC3) {
            Name   (_ADR, 0x00100004)
        }

        // MROM 0 function function
        Device (MRO0) {
            Name   (_ADR, 0x00110000)
        }

        // MROM 1 function function
        Device (MRO1) {
            Name   (_ADR, 0x00110001)
        }

        // sSATA Host controller on PCH
        Device (SAT2) {
            Name   (_ADR, 0x00110005)
        }

        // xHCI controller 1 on PCH
        Device (XHCI) {
            Name   (_ADR, 0x00140000)
        }

        // Thermal Subsystem on PCH
        Device (TERM) {
            Name   (_ADR, 0x00140002)
        }

        // ME HECI #1 on PCH
        Device (HEC1) {
            Name   (_ADR, 0x00160000)
        }

        // ME HECI #2 on PCH
        Device (HEC2) {
            Name   (_ADR, 0x00160001)
        }

        // ME IDE redirect on PCH
        Device (IDER) {
            Name   (_ADR, 0x00160002)
        }

        // MEKT on PCH
        Device (MEKT) {
            Name   (_ADR, 0x00160003)
        }

        // ME HECI #3 on PCH
        Device (HEC3) {
            Name   (_ADR, 0x00160004)
        }

        // SATA controller 1 on PCH
        Device (SAT1) {
            Name   (_ADR, 0x00170000)
        }

        // PCIE PCH Root Port #17
        Device (RP17) {
            #include "RP17_ADR.asl"
            Method (_PRT, 0) {

                Return (AR01)
            }

            // PCIE PCH Slot #17
            Device (SLTH) {
                Name   (_ADR, 0x00000000)
            }
        }

        // PCIE PCH Root Port #18
        Device (RP18) {
            #include "RP18_ADR.asl"
            Method (_PRT, 0) {

                Return (AR02)
            }

            // PCIE PCH Slot #18
            Device (SLTI) {
                Name   (_ADR, 0x00000000)
            }
        }

        // PCIE PCH Root Port #19
        Device (RP19) {
            #include "RP19_ADR.asl"
            Method (_PRT, 0) {

                Return (AR03)
            }

            // PCIE PCH Slot #19
            Device (SLTJ) {
                Name   (_ADR, 0x00000000)
            }
        }

        // PCIE PCH Root Port #20
        Device (RP20) {
            #include "RP20_ADR.asl"
            Method (_PRT, 0) {

                Return (AR04)
            }

            // PCIE PCH Slot #20
            Device (SLTK) {
                Name   (_ADR, 0x00000000)
            }
        }

        // PCIE PCH Root Port #1
        Device (RP01) {
            #include "RP01_ADR.asl"
            Method (_PRT, 0) {

                Return (AR05)
            }
        }

        // PCIE PCH Root Port #2
        Device (RP02) {
            #include "RP02_ADR.asl"
            Method (_PRT, 0) {

                Return (AR06)
            }
        }

        // PCIE PCH Root Port #3
        Device (RP03) {
            #include "RP03_ADR.asl"
            Method (_PRT, 0) {

                Return (AR07)
            }
        }

        // PCIE PCH Root Port #4
        Device (RP04) {
            #include "RP04_ADR.asl"
            Method (_PRT, 0) {

                Return (AR08)
            }
        }

        // PCIE PCH Root Port #5
        Device (RP05) {
            #include "RP05_ADR.asl"
            Method (_PRT, 0) {

                Return (AR09)
            }
        }

        // PCIE PCH Root Port #6
        Device (RP06) {
            #include "RP06_ADR.asl"
            Method (_PRT, 0) {

                Return (AR0A)
            }
        }

        // PCIE PCH Root Port #7
        Device (RP07) {
            #include "RP07_ADR.asl"
            Method (_PRT, 0) {

                Return (AR0B)
            }
        }

        // PCIE PCH Root Port #8
        Device (RP08) {
            #include "RP08_ADR.asl"
            Method (_PRT, 0) {

                Return (AR0C)
            }
        }

        // PCIE PCH Root Port #9
        Device (RP09) {
            #include "RP09_ADR.asl"
            Method (_PRT, 0) {

                Return (AR0D)
            }

            // PCIE PCH Slot #9
            Device (SLT9) {
                Name   (_ADR, 0x00000000)
            }
        }

        // PCIE PCH Root Port #10
        Device (RP10) {
            #include "RP10_ADR.asl"
            Method (_PRT, 0) {

                Return (AR0E)
            }

            // PCIE PCH Slot #10
            Device (SLTA) {
                Name   (_ADR, 0x00000000)
            }
        }

        // PCIE PCH Root Port #11
        Device (RP11) {
            #include "RP11_ADR.asl"
            Method (_PRT, 0) {

                Return (AR0F)
            }

            // PCIE PCH Slot #11
            Device (SLTB) {
                Name   (_ADR, 0x00000000)
            }
        }

        // PCIE PCH Root Port #12
        Device (RP12) {
            #include "RP12_ADR.asl"
            Method (_PRT, 0) {

                Return (AR10)
            }

            // PCIE PCH Slot #12
            Device (SLTC) {
                Name   (_ADR, 0x00000000)
            }
        }

        // PCIE PCH Root Port #13
        Device (RP13) {
            #include "RP13_ADR.asl"
            Method (_PRT, 0) {

                Return (AR11)
            }

            // PCIE PCH Slot #13
            Device (SLTD) {
                Name   (_ADR, 0x00000000)
            }
        }

        // PCIE PCH Root Port #14
        Device (RP14) {
            #include "RP14_ADR.asl"
            Method (_PRT, 0) {

                Return (AR12)
            }

            // PCIE PCH Slot #14
            Device (SLTE) {
                Name   (_ADR, 0x00000000)
            }
        }

        // PCIE PCH Root Port #15
        Device (RP15) {
            #include "RP15_ADR.asl"
            Method (_PRT, 0) {

                Return (AR13)
            }

            // PCIE PCH Slot #15
            Device (SLTF) {
                Name   (_ADR, 0x00000000)
            }
        }

        // PCIE PCH Root Port #16
        Device (RP16) {
            #include "RP16_ADR.asl"
            Method (_PRT, 0) {

                Return (AR14)
            }

            // PCIE PCH Slot #16
            Device (SLTG) {
                Name   (_ADR, 0x00000000)
            }
        }

        // ISA Bridge on PCH
        Device (LPC0) {
            Name   (_ADR, 0x001F0000)

            #include "Mother.asi"
        }

        // P2SB
        Device (P2SB) {
            Name   (_ADR, 0x001F0001)
        }

        // Power Management Controller on PCH
        Device (PMC1) {
            Name   (_ADR, 0x001F0002)
        }

        // HD Audio Subsystem Controller on PCH
        Device (CAVS) {
            Name   (_ADR, 0x001F0003)
        }

        // SMBus controller on PCH
        Device (SMBS) {
            Name   (_ADR, 0x001F0004)
        }

        // SPI controller on PCH
        Device (SPIC) {
            Name   (_ADR, 0x001F0005)
        }

        // GbE Controller on PCH
        Device (GBE1) {
            Name   (_ADR, 0x001F0006)
        }

        // Intel Trace Hub on PCH
        Device (TRHB) {
            Name   (_ADR, 0x001F0007)
        }
    }

    // Socket 0 Root bridge (Stack 1)
    //
#undef SOCKET
#undef STACK
#define SOCKET 0
#define STACK  1
    Device (PC01) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x01)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR15)
        }

        #include "IioRootBridge.asi"

        // PCI Express Port 1A on PC01
        Device (BR1A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR16)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }

        // PCI Express Port 1B on PC01
        Device (BR1B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR17)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }

        // PCI Express Port 1C on PC01
        Device (BR1C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR18)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }

        // PCI Express Port 1D on PC01
        Device (BR1D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR19)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }
    }

    // Socket 0 Root bridge (Stack 2)
    //
#undef SOCKET
#undef STACK
#define SOCKET 0
#define STACK  2
    Device (PC02) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x02)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR1A)
        }

        #include "IioRootBridge.asi"

        // PCI Express Port 2A on PC02
        Device (BR2A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR1B)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"

            // EVA PCIe Uplink
            Device (EPCU) {
                Name   (_ADR, 0x00000000)
                Method (_PRW, 0) {
                    Return (Package (0x02) {0x0B, 0x00})
                }
                Method (_PRT, 0) {

                    Return (AR1C)
                }

                // EVA Virtual Switch Port 0
                Device (VSP0) {
                    Name   (_ADR, 0x00000000)
                    Method (_PRW, 0) {
                        Return (Package (0x02) {0x0B, 0x00})
                    }
                    Method (_PRT, 0) {

                        Return (AR1D)
                    }

                    // EVA CPM0
                    Device (CPM0) {
                        Name   (_ADR, 0x00000000)
                    }
                }

                // EVA Virtual Switch Port 1
                Device (VSP1) {
                    Name   (_ADR, 0x00010000)
                    Method (_PRW, 0) {
                        Return (Package (0x02) {0x0B, 0x00})
                    }
                    Method (_PRT, 0) {

                        Return (AR1E)
                    }

                    // EVA CPM1
                    Device (CPM1) {
                        Name   (_ADR, 0x00000000)
                    }
                }

                // EVA Virtual Switch Port 2
                Device (VSP2) {
                    Name   (_ADR, 0x00020000)
                    Method (_PRW, 0) {
                        Return (Package (0x02) {0x0B, 0x00})
                    }
                    Method (_PRT, 0) {

                        Return (AR1F)
                    }

                    // EVA CPM2
                    Device (CPM2) {
                        Name   (_ADR, 0x00000000)
                    }
                }

                // EVA Virtual Switch Port 3
                Device (VSP3) {
                    Name   (_ADR, 0x00030000)
                    Method (_PRW, 0) {
                        Return (Package (0x02) {0x0B, 0x00})
                    }
                }
            }
        }

        // PCI Express Port 2B on PC02
        Device (BR2B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR20)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }

        // PCI Express Port 2C on PC02
        Device (BR2C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR21)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }

        // PCI Express Port 2D on PC02
        Device (BR2D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR22)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }
    }

    // Socket 0 Root bridge (Stack 3)
    //
#undef SOCKET
#undef STACK
#define SOCKET 0
#define STACK  3
    Device (PC03) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x03)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR23)
        }

        #include "IioRootBridge.asi"

        // PCI Express Port 3A on PC03
        Device (BR3A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR24)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }

        // PCI Express Port 3B on PC03
        Device (BR3B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR25)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }

        // PCI Express Port 3C on PC03
        Device (BR3C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR26)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }

        // PCI Express Port 3D on PC03
        Device (BR3D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR27)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }
    }

    // Socket 0 Root bridge (Stack 4)
    //
#undef SOCKET
#undef STACK
#define SOCKET 0
#define STACK  4
    Device (PC04) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x04)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
            Return (AR28)
        }

        #include "IioRootBridge.asi"

        // PCI Express Port 4A on PC04
        Device (BR4A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR29)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
        }

        // PCI Express Port 4B on PC04
        Device (BR4B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR2A)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }

        // PCI Express Port 4C on PC04
        Device (BR4C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR2B)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }

        // PCI Express Port 4D on PC04
        Device (BR4D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR2C)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }
    }

    // Socket 0 Root bridge (Stack 5)
    //
#undef SOCKET
#undef STACK
#define SOCKET 0
#define STACK  5
    Device (PC05) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x05)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR2D)
        }

        #include "IioRootBridge.asi"

        // PCI Express Port 5A on PC05
        Device (BR5A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR2E)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }

        // PCI Express Port 5B on PC05
        Device (BR5B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR2F)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }

        // PCI Express Port 5C on PC05
        Device (BR5C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR30)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }

        // PCI Express Port 5D on PC05
        Device (BR5D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR31)
            }

            #include "PcieHp.asi"
            #include "PcieNonHpDev.asi"
        }
    }

    // Socket 0 Uncore 0
    //
#undef SOCKET
#undef STACK
#define SOCKET 0
#define STACK  6
    Device (CONCATENATE3(UC, SOCKET, STACK)) {
        Name   (_HID, EISAID("PNP0A03"))
        Name   (_UID, 0x32)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR32)
        }

        #include "Uncore.asi"

        // Uncore 0 UBOX Device
        Device (UBX0) {
            Name   (_ADR, 0x00000000)
        }

        // Uncore 0 Misc 2 UPI 0-7 Device
        Device (UP00) {
            Name   (_ADR, 0x00020000)
        }

        // Unocre 0 Misc 1 UPI 0-7 Device
        Device (UP01) {
            Name   (_ADR, 0x00030000)
        }

        // Uncore 0 M2UPI0 Device
        Device (M2U0) {
            Name   (_ADR, 0x00050000)
        }

        // Uncore 0 M2UPI1 Device
        Device (M2U1) {
            Name   (_ADR, 0x00060000)
        }

        // Uncore 0 M2UPI2 Device
        Device (M2U2) {
            Name   (_ADR, 0x00070000)
        }

        // Uncore 0 CHASIS_SMBUS Devices
        Device (CSM0) {
            Name   (_ADR, 0x000B0000)
        }

        // Uncore 0 MS2MEM_SCF_MS2MEM0 Device
        Device (M2M0) {
            Name   (_ADR, 0x000C0000)
        }

        // Uncore 0 MS2MEM_SCF_MS2MEM1 Device
        Device (M2M1) {
            Name   (_ADR, 0x000D0000)
        }

        // Uncore 0 MCDDR0 Device
        Device (MCD0) {
            Name   (_ADR, 0x001A0000)
        }

        // Uncore 0 MCDDR1 Device
        Device (MCD1) {
            Name   (_ADR, 0x001B0000)
        }
    }

    // Socket 0 Uncore 1
    //
#undef SOCKET
#undef STACK
#define SOCKET 0
#define STACK  7
    Device (CONCATENATE3(UC, SOCKET, STACK)) {
        Name   (_HID, EISAID("PNP0A03"))
        Name   (_UID, 0x33)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR33)
        }

        #include "Uncore.asi"

        // Uncore 1 GRP1_CHA0-7 Device
        Device (CHA0) {
            Name   (_ADR, 0x00000000)
        }

        // Uncore 1 GRP1_CHA8-15 Device
        Device (CHA1) {
            Name   (_ADR, 0x00010000)
        }

        // Uncore 1 GRP1_CHA16-23 Device
        Device (CHA2) {
            Name   (_ADR, 0x00020000)
        }

        // Uncore 1 GRP1_CHAU24-31 Device
        Device (CHA3) {
            Name   (_ADR, 0x00030000)
        }

        // Uncore 1 GRP1_CHA32-33 Device
        Device (CHA4) {
            Name   (_ADR, 0x00040000)
        }

        // Uncore 1 GRP0_CHA0-7 Device
        Device (CHA5) {
            Name   (_ADR, 0x000A0000)
        }

        // Uncore 1 GRP0_CHA24-31 Device
        Device (CHA8) {
            Name   (_ADR, 0x000D0000)
        }

        // Uncore 1 GRP0_CHA32-33 Device
        Device (CHA9) {
            Name   (_ADR, 0x000E0000)
        }

        // Uncore 1 GRP0_CHA8-15 Device
        Device (CHA6) {
            Name   (_ADR, 0x00B00000)
        }

        // Uncore 1 GRP0_CHA16-23 Device
        Device (CHA7) {
            Name   (_ADR, 0x000C0000)
        }

        // Uncore 1 CHAALL0-1 Device
        Device (CA00) {
            Name   (_ADR, 0x001D0000)
        }

        // Uncore 1 CHASIS_PUINT0-7 Device
        Device (PUC0) {
            Name   (_ADR, 0x001E0000)
        }

        // Uncore 1 Gen3Phy Device
        Device (GN30) {
            Name   (_ADR, 0x001F0000)
        }
    }

#if MAX_SOCKET > 1
    //
    // Socket 1 Root bridge (Stack 0)
    //
#undef SOCKET
#undef STACK
#define SOCKET 1
#define STACK  0
    Device (PC06) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x06)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR34)
        }

        #include "IioRootBridge.asi"
        #include "Sck1Ejd.asi"

        // IIOMISC on PC06
        Device (IIM1) {
            Name   (_ADR, 0x00000000)
        }

        // CB3DMA on PC06
        Device (CB1A) {
            Name   (_ADR, 0x00010000)
        }

        // CB3DMA on PC06
        Device (CB1B) {
            Name   (_ADR, 0x00010001)
        }

        // CB3DMA on PC06
        Device (CB1C) {
            Name   (_ADR, 0x00010002)
        }

        // CB3DMA on PC06
        Device (CB1D) {
            Name   (_ADR, 0x00010003)
        }

        // CB3DMA on PC06
        Device (CB1E) {
            Name   (_ADR, 0x00010004)
        }

        // CB3DMA on PC06
        Device (CB1F) {
            Name   (_ADR, 0x00010005)
        }

        // CB3DMA on PC06
        Device (CB1G) {
            Name   (_ADR, 0x00010006)
        }

        // CB3DMA on PC06
        Device (CB1H) {
            Name   (_ADR, 0x00010007)
        }
    }

    // Socket 1 Root bridge (Stack 1)
    //
#undef SOCKET
#undef STACK
#define SOCKET 1
#define STACK  1
    Device (PC07) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x07)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR35)
        }

        #include "IioRootBridge.asi"
        #include "Sck1Ejd.asi"

        // PCI Express Port 1A on PC07
        Device (QR1A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR36)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 1B on PC07
        Device (QR1B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR37)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 1C on PC07
        Device (QR1C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR38)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 1D on PC07
        Device (QR1D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR39)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }
    }

    // Socket 1 Root bridge (Stack 2)
    //
#undef SOCKET
#undef STACK
#define SOCKET 1
#define STACK  2
    Device (PC08) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x08)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR3A)
        }

        #include "IioRootBridge.asi"
        #include "Sck1Ejd.asi"

        // PCI Express Port 2A on PC08
        Device (QR2A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR3B)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 2B on PC08
        Device (QR2B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR3C)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 2C on PC08
        Device (QR2C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR3D)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 2D on PC08
        Device (QR2D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR3E)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }
    }

    // Socket 1 Root bridge (Stack 3)
    //
#undef SOCKET
#undef STACK
#define SOCKET 1
#define STACK  3
    Device (PC09) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x09)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR3F)
        }

        #include "IioRootBridge.asi"
        #include "Sck1Ejd.asi"

        // PCI Express Port 3A on PC09
        Device (QR3A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR40)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 3B on PC09
        Device (QR3B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR41)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 3C on PC09
        Device (QR3C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR42)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 3D on PC09
        Device (QR3D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR43)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }
    }

    // Socket 1 Root bridge (Stack 4)
    //
#undef SOCKET
#undef STACK
#define SOCKET 1
#define STACK  4
    Device (PC10) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x0A)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR44)
        }

        #include "IioRootBridge.asi"
        #include "Sck1Ejd.asi"

        // PCI Express Port 4A on PC10
        Device (QR4A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR45)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 4B on PC10
        Device (QR4B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR46)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 4C on PC10
        Device (QR4C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR47)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 4D on PC10
        Device (QR4D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR48)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }
    }

    // Socket 1 Root bridge (Stack 5)
    //
#undef SOCKET
#undef STACK
#define SOCKET 1
#define STACK  5
    Device (PC11) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x0B)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR49)
        }

        #include "IioRootBridge.asi"
        #include "Sck1Ejd.asi"

        // PCI Express Port 5A on PC11
        Device (QR5A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR4A)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 5B on PC11
        Device (QR5B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR4B)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 5C on PC11
        Device (QR5C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR4C)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }

        // PCI Express Port 5D on PC11
        Device (QR5D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR4D)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC0610nmEjd.asi"
        }
    }

    // Socket 1 Uncore 0
    //
#undef SOCKET
#undef STACK
#define SOCKET 1
#define STACK  6
    Device (CONCATENATE3(UC, SOCKET, STACK)) {
        Name   (_HID, EISAID("PNP0A03"))
        Name   (_UID, 0x34)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR4E)
        }

        #include "Uncore.asi"

        // Uncore 2 UBOX Device
        Device (UBX1) {
            Name   (_ADR, 0x00000000)
        }

        // Uncore 2 Misc 2 UPI 0-7 Device
        Device (UP02) {
            Name   (_ADR, 0x00020000)
        }

        // Uncore 2 Misc 1 UPI 0-7 Device
        Device (UP03) {
            Name   (_ADR, 0x00030000)
        }

        // Uncore 2 M2UPI0 Device
        Device (M2U3) {
            Name   (_ADR, 0x00050000)
        }

        // Uncore 2 M2UPI1 Device
        Device (M2U4) {
            Name   (_ADR, 0x00060000)
        }

        // Uncore 2 M2UPI2 Device
        Device (M2U5) {
            Name   (_ADR, 0x00070000)
        }

        // Uncore 2 CHASIS_SMBUS Devices
        Device (CSM1) {
            Name   (_ADR, 0x000B0000)
        }

        // Uncore 2 MS2MEM_SCF_MS2MEM0 Device
        Device (M2M2) {
            Name   (_ADR, 0x000C0000)
        }

        // Uncore 2 MS2MEM_SCF_MS2MEM1 Device
        Device (M2M3) {
            Name   (_ADR, 0x000D0000)
        }

        // Uncore 2 MCDDR0 Device
        Device (MCD2) {
            Name   (_ADR, 0x001A0000)
        }

        // Uncore 2 MCDDR1 Device
        Device (MCD3) {
            Name   (_ADR, 0x001B0000)
        }
    }

    // Socket 1 Uncore 1
    //
#undef SOCKET
#undef STACK
#define SOCKET 1
#define STACK  7
    Device (CONCATENATE3(UC, SOCKET, STACK)) {
        Name   (_HID, EISAID("PNP0A03"))
        Name   (_UID, 0x35)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR4F)
        }

        #include "Uncore.asi"

        // Uncore 3 GRP1_CHA0-7 Device
        Device (DHA0) {
            Name   (_ADR, 0x00000000)
        }

        // Uncore 3 GRP1_CHA8-15 Device
        Device (DHA1) {
            Name   (_ADR, 0x00010000)
        }

        // Uncore 3 GRP1_CHA16-23 Device
        Device (DHA2) {
            Name   (_ADR, 0x00020000)
        }

        // Uncore 3 GRP1_CHAU24-31 Device
        Device (DHA3) {
            Name   (_ADR, 0x00030000)
        }

        // Uncore 3 GRP1_CHA32-33 Device
        Device (DHA4) {
            Name   (_ADR, 0x00040000)
        }

        // Uncore 3 GRP0_CHA0-7 Device
        Device (DHA5) {
            Name   (_ADR, 0x000A0000)
        }

        // Uncore 3 GRP0_CHA24-31 Device
        Device (DHA8) {
            Name   (_ADR, 0x000D0000)
        }

        // Uncore 3 GRP0_CHA32-33 Device
        Device (DHA9) {
            Name   (_ADR, 0x000E0000)
        }

        // Uncore 3 GRP0_CHA8-15 Device
        Device (DHA6) {
            Name   (_ADR, 0x00B00000)
        }

        // Uncore 3 GRP0_CHA16-23 Device
        Device (DHA7) {
            Name   (_ADR, 0x000C0000)
        }

        // Uncore 3 CHAALL0-1 Device
        Device (CA01) {
            Name   (_ADR, 0x001D0000)
        }

        // Uncore 3 CHASIS_PUINT0-7 Device
        Device (PUC1) {
            Name   (_ADR, 0x001E0000)
        }

        // Uncore 3 Gen3Phy Device
        Device (GN31) {
            Name   (_ADR, 0x001F0000)
        }
    }
#endif

#if MAX_SOCKET > 2
    // Socket 2 Root bridge (Stack 0)
    //
#undef SOCKET
#undef STACK
#define SOCKET 2
#define STACK  0
    Device (PC12) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x0C)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR50)
        }

        #include "IioRootBridge.asi"
        #include "Sck2Ejd.asi"

        // IIOMISC on PC12
        Device (IIM2) {
            Name   (_ADR, 0x00000000)
        }

        // CB3DMA on PC12
        Device (CB2A) {
            Name   (_ADR, 0x00010000)
        }

        // CB3DMA on PC12
        Device (CB2B) {
            Name   (_ADR, 0x00010001)
        }

        // CB3DMA on PC12
        Device (CB2C) {
            Name   (_ADR, 0x00010002)
        }

        // CB3DMA on PC12
        Device (CB2D) {
            Name   (_ADR, 0x00010003)
        }

        // CB3DMA on PC12
        Device (CB2E) {
            Name   (_ADR, 0x00010004)
        }

        // CB3DMA on PC12
        Device (CB2F) {
            Name   (_ADR, 0x00010005)
        }

        // CB3DMA on PC12
        Device (CB2G) {
            Name   (_ADR, 0x00010006)
        }

        // CB3DMA on PC12
        Device (CB2H) {
            Name   (_ADR, 0x00010007)
        }
    }

    // Socket 2 Root bridge (Stack 1)
    //
#undef SOCKET
#undef STACK
#define SOCKET 2
#define STACK  1
    Device (PC13) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x0D)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR51)
        }

        #include "IioRootBridge.asi"
        #include "Sck2Ejd.asi"

        // PCI Express Port 1A on PC13
        Device (RR1A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR52)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 1B on PC13
        Device (RR1B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR53)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 1C on PC13
        Device (RR1C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR54)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 1D on PC13
        Device (RR1D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR55)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }
    }

    // Socket 2 Root bridge (Stack 2)
    //
#undef SOCKET
#undef STACK
#define SOCKET 2
#define STACK  2
    Device (PC14) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x0E)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR56)
        }

        #include "IioRootBridge.asi"
        #include "Sck2Ejd.asi"

        // PCI Express Port 2A on PC14
        Device (RR2A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR57)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 2B on PC14
        Device (RR2B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR58)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 2C on PC14
        Device (RR2C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR59)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 2D on PC14
        Device (RR2D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR5A)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }
    }

    // Socket 2 Root bridge (Stack 3)
    //
#undef SOCKET
#undef STACK
#define SOCKET 2
#define STACK  3
    Device (PC15) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x0F)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR5B)
        }

        #include "IioRootBridge.asi"
        #include "Sck2Ejd.asi"

        // PCI Express Port 3A on PC15
        Device (RR3A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR5C)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 3B on PC15
        Device (RR3B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR5D)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 3C on PC15
        Device (RR3C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR5E)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 3D on PC15
        Device (RR3D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR5F)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }
    }

    // Socket 2 Root bridge (Stack 4)
    //
#undef SOCKET
#undef STACK
#define SOCKET 2
#define STACK  4
    Device (PC16) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x10)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR60)
        }

        #include "IioRootBridge.asi"
        #include "Sck2Ejd.asi"

        // PCI Express Port 4A on PC16
        Device (RR4A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR61)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 4B on PC16
        Device (RR4B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR62)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 4C on PC16
        Device (RR4C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR63)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 4D on PC16
        Device (RR4D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR64)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }
    }

    // Socket 2 Root bridge (Stack 5)
    //
#undef SOCKET
#undef STACK
#define SOCKET 2
#define STACK  5
    Device (PC17) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x11)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR65)
        }

        #include "IioRootBridge.asi"
        #include "Sck2Ejd.asi"

        // PCI Express Port 5A on PC17
        Device (RR5A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR66)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 5B on PC17
        Device (RR5B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR67)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 5C on PC17
        Device (RR5C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR68)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }

        // PCI Express Port 5D on PC17
        Device (RR5D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR69)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1210nmEjd.asi"
        }
    }

    // Socket 2 Uncore 0
    //
#undef SOCKET
#undef STACK
#define SOCKET 2
#define STACK  6
    Device (CONCATENATE3(UC, SOCKET, STACK)) {
        Name   (_HID, EISAID("PNP0A03"))
        Name   (_UID, 0x36)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR6A)
        }

        #include "Uncore.asi"

        // Uncore 4 UBOX Device
        Device (UBX2) {
            Name   (_ADR, 0x00000000)
        }

        // Uncore 4 Misc 2 UPI 0-7 Device
        Device (UP04) {
            Name   (_ADR, 0x00020000)
        }

        // Uncore 4 Misc 1 UPI 0-7 Device
        Device (UP05) {
            Name   (_ADR, 0x00030000)
        }

        // Uncore 4 M2UPI Device
        Device (M2U6) {
            Name   (_ADR, 0x00050000)
        }

        // Uncore 4 M2UPI Device
        Device (M2U7) {
            Name   (_ADR, 0x00060000)
        }

        // Uncore 4 M2UPI Device
        Device (M2U8) {
            Name   (_ADR, 0x00070000)
        }

        // Uncore 4 CHASIS_SMBUS Devices
        Device (CSM2) {
            Name   (_ADR, 0x000B0000)
        }

        // Uncore 4 MS2MEM_SCF_MS2MEM0 Device
        Device (M2M4) {
            Name   (_ADR, 0x000C0000)
        }

        // Uncore 4 MS2MEM_SCF_MS2MEM1 Device
        Device (M2M5) {
            Name   (_ADR, 0x000D0000)
        }

        // Uncore 4 MCDDR0 Device
        Device (MCD4) {
            Name   (_ADR, 0x001A0000)
        }

        // Uncore 4 MCDDR1 Device
        Device (MCD5) {
            Name   (_ADR, 0x001B0000)
        }
    }

    // Socket 2 Uncore 1
    //
#undef SOCKET
#undef STACK
#define SOCKET 2
#define STACK  7
    Device (CONCATENATE3(UC, SOCKET, STACK)) {
        Name   (_HID, EISAID("PNP0A03"))
        Name   (_UID, 0x37)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR6B)
        }

        #include "Uncore.asi"

        // Uncore 5 GRP1_CHA0-7 Device
        Device (EHA0) {
            Name   (_ADR, 0x00000000)
        }

        // Uncore 5 GRP1_CHA8-15 Device
        Device (EHA1) {
            Name   (_ADR, 0x00010000)
        }

        // Uncore 5 GRP1_CHA16-23 Device
        Device (EHA2) {
            Name   (_ADR, 0x00020000)
        }

        // Uncore 5 GRP1_CHAU24-31 Device
        Device (EHA3) {
            Name   (_ADR, 0x00030000)
        }

        // Uncore 5 GRP1_CHA32-33 Device
        Device (EHA4) {
            Name   (_ADR, 0x00040000)
        }

        // Uncore 5 GRP0_CHA0-7 Device
        Device (EHA5) {
            Name   (_ADR, 0x000A0000)
        }

        // Uncore 5 GRP0_CHA24-31 Device
        Device (EHA8) {
            Name   (_ADR, 0x000D0000)
        }

        // Uncore 5 GRP0_CHA32-33 Device
        Device (EHA9) {
            Name   (_ADR, 0x000E0000)
        }

        // Uncore 5 GRP0_CHA8-15 Device
        Device (EHA6) {
            Name   (_ADR, 0x00B00000)
        }

        // Uncore 5 GRP0_CHA16-23 Device
        Device (EHA7) {
            Name   (_ADR, 0x000C0000)
        }

        // Uncore 5 CHAALL0-1 Device
        Device (CA02) {
            Name   (_ADR, 0x001D0000)
        }

        // Uncore 5 CHASIS_PUINT0-7 Device
        Device (PUC2) {
            Name   (_ADR, 0x001E0000)
        }

        // Uncore 5 Gen3Phy Device
        Device (GN32) {
            Name   (_ADR, 0x001F0000)
        }
    }
#endif

#if MAX_SOCKET > 3
    // Socket 3 Root bridge (Stack 0)
    //
#undef SOCKET
#undef STACK
#define SOCKET 3
#define STACK  0
    Device (PC18) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x12)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR6C)
        }

        #include "IioRootBridge.asi"
        #include "Sck3Ejd.asi"

        // IIOMISC on PC18
        Device (IIM3) {
            Name   (_ADR, 0x00000000)
        }

        // CB3DMA on PC18
        Device (CB3A) {
            Name   (_ADR, 0x00010000)
        }

        // CB3DMA on PC18
        Device (CB3B) {
            Name   (_ADR, 0x00010001)
        }

        // CB3DMA on PC18
        Device (CB3C) {
            Name   (_ADR, 0x00010002)
        }

        // CB3DMA on PC18
        Device (CB3D) {
            Name   (_ADR, 0x00010003)
        }

        // CB3DMA on PC18
        Device (CB3E) {
            Name   (_ADR, 0x00010004)
        }

        // CB3DMA on PC18
        Device (CB3F) {
            Name   (_ADR, 0x00010005)
        }

        // CB3DMA on PC18
        Device (CB3G) {
            Name   (_ADR, 0x00010006)
        }

        // CB3DMA on PC18
        Device (CB3H) {
            Name   (_ADR, 0x00010007)
        }
    }

    // Socket 3 Root bridge (Stack 1)
    //
#undef SOCKET
#undef STACK
#define SOCKET 3
#define STACK  1
    Device (PC19) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x13)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR6D)
        }

        #include "IioRootBridge.asi"
        #include "Sck3Ejd.asi"

        // PCI Express Port 1A on PC19
        Device (SR1A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR6E)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 1B on PC19
        Device (SR1B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR6F)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 1C on PC19
        Device (SR1C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR70)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 1D on PC19
        Device (SR1D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR71)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }
    }

    // Socket 3 Root bridge (Stack 2)
    //
#undef SOCKET
#undef STACK
#define SOCKET 3
#define STACK  2
    Device (PC20) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x14)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR72)
        }

        #include "IioRootBridge.asi"
        #include "Sck3Ejd.asi"

        // PCI Express Port 2A on  PC20
        Device (SR2A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR73)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 2B on PC20
        Device (SR2B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR74)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 2C on PC20
        Device (SR2C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR75)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 2D on PC20
        Device (SR2D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR76)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }
    }

    // Socket 3 Root bridge (Stack 3)
    //
#undef SOCKET
#undef STACK
#define SOCKET 3
#define STACK  3
    Device (PC21) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x15)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR77)
        }

        #include "IioRootBridge.asi"
        #include "Sck3Ejd.asi"

        // PCI Express Port 3A on PC21
        Device (SR3A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR78)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 3B on PC21
        Device (SR3B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR79)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 3C on PC21
        Device (SR3C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR7A)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 3D on PC21
        Device (SR3D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR7B)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }
    }

    // Socket 3 Root bridge (Stack 4)
    //
#undef SOCKET
#undef STACK
#define SOCKET 3
#define STACK  4
    Device (PC22) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x16)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR7C)
        }

        #include "IioRootBridge.asi"
        #include "Sck3Ejd.asi"

        // PCI Express Port 4A on PC22
        Device (SR4A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR7D)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 4B on PC22
        Device (SR4B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR7E)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 4C on PC22
        Device (SR4C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR7F)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 4D on PC22
        Device (SR4D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR80)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }
    }

    // Socket 3 Root bridge (Stack 5)
    //
#undef SOCKET
#undef STACK
#define SOCKET 3
#define STACK  5
    Device (PC23) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x17)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR81)
        }

        #include "IioRootBridge.asi"
        #include "Sck3Ejd.asi"

        // PCI Express Port 5A on PC23
        Device (SR5A) {
            Name   (_ADR, 0x00020000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR82)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 5B on PC23
        Device (SR5B) {
            Name   (_ADR, 0x00030000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR83)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 5C on PC23
        Device (SR5C) {
            Name   (_ADR, 0x00040000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR84)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }

        // PCI Express Port 5D on PC23
        Device (SR5D) {
            Name   (_ADR, 0x00050000)
            Method (_PRW, 0) {
                Return (Package (0x02) {0x09, 0x04})
            }
            Method (_PRT, 0) {

                Return (AR85)
            }

            #include "PcieHp.asi"
            #include "PcieHpDev.asi"
            #include "PC1810nmEjd.asi"
        }
    }

    // Socket 3 Uncore 0
    //
#undef SOCKET
#undef STACK
#define SOCKET 3
#define STACK  6
    Device (CONCATENATE3(UC, SOCKET, STACK)) {
        Name   (_HID, EISAID("PNP0A03"))
        Name   (_UID, 0x38)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR86)
        }

        #include "Uncore.asi"

        // Uncore 6 UBOX Device
        Device (UBX3) {
            Name   (_ADR, 0x00000000)
        }

        // Uncore 6 Misc 2 UPI 0-7 Device
        Device (UP06) {
            Name   (_ADR, 0x00020000)
        }

        // Uncore 6 Misc 1 UPI 0-7 Device
        Device (UP07) {
            Name   (_ADR, 0x00030000)
        }

        // Uncore 6 M2UPI0 Device
        Device (M2U9) {
            Name   (_ADR, 0x00050000)
        }

        // Uncore 6 M2UPI1 Device
        Device (M2UA) {
            Name   (_ADR, 0x00060000)
        }

        // Uncore 6 M2UPI2 Device
        Device (M2UB) {
            Name   (_ADR, 0x00070000)
        }

        // Uncore 6 CHASIS_SMBUS Devices
        Device (CSM3) {
            Name   (_ADR, 0x000B0000)
        }

        // Uncore 6 MS2MEM_SCF_MS2MEM0 Device
        Device (M2M6) {
            Name   (_ADR, 0x000C0000)
        }

        // Uncore 6 MS2MEM_SCF_MS2MEM1 Device
        Device (M2M7) {
            Name   (_ADR, 0x000D0000)
        }

        // Uncore 6 MCDDR0 Device
        Device (MCD6) {
            Name   (_ADR, 0x001A0000)
        }

        // Uncore 6 MCDDR1 Device
        Device (MCD7) {
            Name   (_ADR, 0x001B0000)
        }
    }

    // Socket 3 Uncore 1
    //
#undef SOCKET
#undef STACK
#define SOCKET 3
#define STACK  7
    Device (CONCATENATE3(UC, SOCKET, STACK)) {
        Name   (_HID, EISAID("PNP0A03"))
        Name   (_UID, 0x39)

        //
        // _PRT is ACPI method called by OS to read PCI Routing Table.
        //
        Method (_PRT, 0)
        {
          Return (AR87)
        }

        #include "Uncore.asi"

        // Uncore 7 GRP1_CHA0-7 Device
        Device (FHA0) {
            Name   (_ADR, 0x00000000)
        }

        // Uncore 7 GRP1_CHA8-15 Device
        Device (FHA1) {
            Name   (_ADR, 0x00010000)
        }

        // Uncore 7 GRP1_CHA16-23 Device
        Device (FHA2) {
            Name   (_ADR, 0x00020000)
        }

        // Uncore 7 GRP1_CHAU24-31 Device
        Device (FHA3) {
            Name   (_ADR, 0x00030000)
        }

        // Uncore 7 GRP1_CHA32-33 Device
        Device (FHA4) {
            Name   (_ADR, 0x00040000)
        }

        // Uncore 7 GRP0_CHA0-7 Device
        Device (FHA5) {
            Name   (_ADR, 0x000A0000)
        }

        // Uncore 7 GRP0_CHA24-31 Device
        Device (FHA8) {
            Name   (_ADR, 0x000D0000)
        }

        // Uncore 7 GRP0_CHA32-33 Device
        Device (FHA9) {
            Name   (_ADR, 0x000E0000)
        }

        // Uncore 7 GRP0_CHA8-15 Device
        Device (FHA6) {
            Name   (_ADR, 0x00B00000)
        }

        // Uncore 7 GRP0_CHA16-23 Device
        Device (FHA7) {
            Name   (_ADR, 0x000C0000)
        }

        // Uncore 7 CHAALL0-1 Device
        Device (CA03) {
            Name   (_ADR, 0x001D0000)
        }

        // Uncore 7 CHASIS_PUINT0-7 Device
        Device (PUC3) {
            Name   (_ADR, 0x001E0000)
        }

        // Uncore 7 Gen3Phy Device
        Device (GN33) {
            Name   (_ADR, 0x001F0000)
        }
    }
#endif

    // Virtual FPGA Bridge on Socket 0
    Device (VFP0) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x18)
        Method (_BBN, 0, NotSerialized) {
            return (FBB0)
        }

        Method (_PRT, 0) {

            Return (AR88)
        }

        #include "FpgaBus00.asi"

        // FPGA Device
        Device (FPG0) {
            Name   (_ADR, 0x00000000)
        }
    }
#if MAX_SOCKET > 1

    // Virtual FPGA Bridge on Socket 1
    Device (VFP1) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x19)
        Method (_BBN, 0, NotSerialized) {
            return (FBB1)
        }

        Method (_PRT, 0) {

            Return (AR89)
        }

        #include "FpgaBus01.asi"

        // FPGA Device
        Device (FPG1) {
            Name   (_ADR, 0x00000000)
        }
    }
#endif

#if MAX_SOCKET > 2
    // Virtual FPGA Bridge on Socket 2
    Device (VFP2) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x1A)
        Method (_BBN, 0, NotSerialized) {
            return (FBB2)
        }

        Method (_PRT, 0) {

            Return (AR8A)
        }

        #include "FpgaBus02.asi"

        // FPGA Device
        Device (FPG2) {
            Name   (_ADR, 0x00000000)
        }
    }
#endif

#if MAX_SOCKET > 3
    // Virtual FPGA Bridge on Socket 3
    Device (VFP3) {
        Name   (_HID, EISAID("PNP0A08"))
        Name   (_CID, EISAID("PNP0A03"))
        Name   (_UID, 0x1B)
        Method (_BBN, 0, NotSerialized) {
            return (FBB3)
        }

        Method (_PRT, 0) {

            Return (AR8B)
        }

        #include "FpgaBus03.asi"

        // FPGA Device
        Device (FPG3) {
            Name   (_ADR, 0x00000000)
        }
    }
#endif
}

Scope (\_GPE) {
    // [BR1A]: PCI Express Port 1A on PC01
    // [BR1B]: PCI Express Port 1B on PC01
    // [BR1C]: PCI Express Port 1C on PC01
    // [BR1D]: PCI Express Port 1D on PC01
    // [BR2A]: PCI Express Port 2A on PC02
    // [BR2B]: PCI Express Port 2B on PC02
    // [BR2C]: PCI Express Port 2C on PC02
    // [BR2D]: PCI Express Port 2D on PC02
    // [BR3A]: PCI Express Port 3A on PC03
    // [BR3B]: PCI Express Port 3B on PC03
    // [BR3C]: PCI Express Port 3C on PC03
    // [BR3D]: PCI Express Port 3D on PC03
    // [BR4A]: PCI Express Port 4A on PC04
    // [BR4B]: PCI Express Port 4B on PC04
    // [BR4C]: PCI Express Port 4C on PC04
    // [BR4D]: PCI Express Port 4D on PC04
    // [BR5A]: PCI Express Port 5A on PC05
    // [BR5B]: PCI Express Port 5B on PC05
    // [BR5C]: PCI Express Port 5C on PC05
    // [BR5D]: PCI Express Port 5D on PC05
    // [QR1A]: PCI Express Port 1A on PC07
    // [QR1B]: PCI Express Port 1B on PC07
    // [QR1C]: PCI Express Port 1C on PC07
    // [QR1D]: PCI Express Port 1D on PC07
    // [QR2A]: PCI Express Port 2A on PC08
    // [QR2B]: PCI Express Port 2B on PC08
    // [QR2C]: PCI Express Port 2C on PC08
    // [QR2D]: PCI Express Port 2D on PC08
    // [QR3A]: PCI Express Port 3A on PC09
    // [QR3B]: PCI Express Port 3B on PC09
    // [QR3C]: PCI Express Port 3C on PC09
    // [QR3D]: PCI Express Port 3D on PC09
    // [QR4A]: PCI Express Port 4A on PC10
    // [QR4B]: PCI Express Port 4B on PC10
    // [QR4C]: PCI Express Port 4C on PC10
    // [QR4D]: PCI Express Port 4D on PC10
    // [QR5A]: PCI Express Port 5A on PC11
    // [QR5B]: PCI Express Port 5B on PC11
    // [QR5C]: PCI Express Port 5C on PC11
    // [QR5D]: PCI Express Port 5D on PC11
    // [RR1A]: PCI Express Port 1A on PC13
    // [RR1B]: PCI Express Port 1B on PC13
    // [RR1C]: PCI Express Port 1C on PC13
    // [RR1D]: PCI Express Port 1D on PC13
    // [RR2A]: PCI Express Port 2A on PC14
    // [RR2B]: PCI Express Port 2B on PC14
    // [RR2C]: PCI Express Port 2C on PC14
    // [RR2D]: PCI Express Port 2D on PC14
    // [RR3A]: PCI Express Port 3A on PC15
    // [RR3B]: PCI Express Port 3B on PC15
    // [RR3C]: PCI Express Port 3C on PC15
    // [RR3D]: PCI Express Port 3D on PC15
    // [RR4A]: PCI Express Port 4A on PC16
    // [RR4B]: PCI Express Port 4B on PC16
    // [RR4C]: PCI Express Port 4C on PC16
    // [RR4D]: PCI Express Port 4D on PC16
    // [RR5A]: PCI Express Port 5A on PC17
    // [RR5B]: PCI Express Port 5B on PC17
    // [RR5C]: PCI Express Port 5C on PC17
    // [RR5D]: PCI Express Port 5D on PC17
    // [SR1A]: PCI Express Port 1A on PC19
    // [SR1B]: PCI Express Port 1B on PC19
    // [SR1C]: PCI Express Port 1C on PC19
    // [SR1D]: PCI Express Port 1D on PC19
    // [SR2A]: PCI Express Port 2A on  PC20
    // [SR2B]: PCI Express Port 2B on PC20
    // [SR2C]: PCI Express Port 2C on PC20
    // [SR2D]: PCI Express Port 2D on PC20
    // [SR3A]: PCI Express Port 3A on PC21
    // [SR3B]: PCI Express Port 3B on PC21
    // [SR3C]: PCI Express Port 3C on PC21
    // [SR3D]: PCI Express Port 3D on PC21
    // [SR4A]: PCI Express Port 4A on PC22
    // [SR4B]: PCI Express Port 4B on PC22
    // [SR4C]: PCI Express Port 4C on PC22
    // [SR4D]: PCI Express Port 4D on PC22
    // [SR5A]: PCI Express Port 5A on PC23
    // [SR5B]: PCI Express Port 5B on PC23
    // [SR5C]: PCI Express Port 5C on PC23
    // [SR5D]: PCI Express Port 5D on PC23
    Method (_L09, 0x0, NotSerialized) {
        #include "Gpe.asi"
        Notify (\_SB.PC01.BR1A, 0x02)
        Notify (\_SB.PC01.BR1B, 0x02)
        Notify (\_SB.PC01.BR1C, 0x02)
        Notify (\_SB.PC01.BR1D, 0x02)
        Notify (\_SB.PC02.BR2A, 0x02)
        Notify (\_SB.PC02.BR2B, 0x02)
        Notify (\_SB.PC02.BR2C, 0x02)
        Notify (\_SB.PC02.BR2D, 0x02)
        Notify (\_SB.PC03.BR3A, 0x02)
        Notify (\_SB.PC03.BR3B, 0x02)
        Notify (\_SB.PC03.BR3C, 0x02)
        Notify (\_SB.PC03.BR3D, 0x02)
        Notify (\_SB.PC04.BR4A, 0x02)
        Notify (\_SB.PC04.BR4B, 0x02)
        Notify (\_SB.PC04.BR4C, 0x02)
        Notify (\_SB.PC04.BR4D, 0x02)
        Notify (\_SB.PC05.BR5A, 0x02)
        Notify (\_SB.PC05.BR5B, 0x02)
        Notify (\_SB.PC05.BR5C, 0x02)
        Notify (\_SB.PC05.BR5D, 0x02)
#if MAX_SOCKET > 1
        Notify (\_SB.PC07.QR1A, 0x02)
        Notify (\_SB.PC07.QR1B, 0x02)
        Notify (\_SB.PC07.QR1C, 0x02)
        Notify (\_SB.PC07.QR1D, 0x02)
        Notify (\_SB.PC08.QR2A, 0x02)
        Notify (\_SB.PC08.QR2B, 0x02)
        Notify (\_SB.PC08.QR2C, 0x02)
        Notify (\_SB.PC08.QR2D, 0x02)
        Notify (\_SB.PC09.QR3A, 0x02)
        Notify (\_SB.PC09.QR3B, 0x02)
        Notify (\_SB.PC09.QR3C, 0x02)
        Notify (\_SB.PC09.QR3D, 0x02)
        Notify (\_SB.PC10.QR4A, 0x02)
        Notify (\_SB.PC10.QR4B, 0x02)
        Notify (\_SB.PC10.QR4C, 0x02)
        Notify (\_SB.PC10.QR4D, 0x02)
        Notify (\_SB.PC11.QR5A, 0x02)
        Notify (\_SB.PC11.QR5B, 0x02)
        Notify (\_SB.PC11.QR5C, 0x02)
        Notify (\_SB.PC11.QR5D, 0x02)
#endif
#if MAX_SOCKET > 2
        Notify (\_SB.PC13.RR1A, 0x02)
        Notify (\_SB.PC13.RR1B, 0x02)
        Notify (\_SB.PC13.RR1C, 0x02)
        Notify (\_SB.PC13.RR1D, 0x02)
        Notify (\_SB.PC14.RR2A, 0x02)
        Notify (\_SB.PC14.RR2B, 0x02)
        Notify (\_SB.PC14.RR2C, 0x02)
        Notify (\_SB.PC14.RR2D, 0x02)
        Notify (\_SB.PC15.RR3A, 0x02)
        Notify (\_SB.PC15.RR3B, 0x02)
        Notify (\_SB.PC15.RR3C, 0x02)
        Notify (\_SB.PC15.RR3D, 0x02)
        Notify (\_SB.PC16.RR4A, 0x02)
        Notify (\_SB.PC16.RR4B, 0x02)
        Notify (\_SB.PC16.RR4C, 0x02)
        Notify (\_SB.PC16.RR4D, 0x02)
        Notify (\_SB.PC17.RR5A, 0x02)
        Notify (\_SB.PC17.RR5B, 0x02)
        Notify (\_SB.PC17.RR5C, 0x02)
        Notify (\_SB.PC17.RR5D, 0x02)
#endif
#if MAX_SOCKET > 3
        Notify (\_SB.PC19.SR1A, 0x02)
        Notify (\_SB.PC19.SR1B, 0x02)
        Notify (\_SB.PC19.SR1C, 0x02)
        Notify (\_SB.PC19.SR1D, 0x02)
        Notify (\_SB.PC20.SR2A, 0x02)
        Notify (\_SB.PC20.SR2B, 0x02)
        Notify (\_SB.PC20.SR2C, 0x02)
        Notify (\_SB.PC20.SR2D, 0x02)
        Notify (\_SB.PC21.SR3A, 0x02)
        Notify (\_SB.PC21.SR3B, 0x02)
        Notify (\_SB.PC21.SR3C, 0x02)
        Notify (\_SB.PC21.SR3D, 0x02)
        Notify (\_SB.PC22.SR4A, 0x02)
        Notify (\_SB.PC22.SR4B, 0x02)
        Notify (\_SB.PC22.SR4C, 0x02)
        Notify (\_SB.PC22.SR4D, 0x02)
        Notify (\_SB.PC23.SR5A, 0x02)
        Notify (\_SB.PC23.SR5B, 0x02)
        Notify (\_SB.PC23.SR5C, 0x02)
        Notify (\_SB.PC23.SR5D, 0x02)
#endif
    }

    // [EPCU]: EVA PCIe Uplink
    // [VSP0]: EVA Virtual Switch Port 0
    // [VSP1]: EVA Virtual Switch Port 1
    // [VSP2]: EVA Virtual Switch Port 2
    // [VSP3]: EVA Virtual Switch Port 3
    Method (_L0B, 0x0, NotSerialized) {
        Notify (\_SB.PC02.BR2A.EPCU, 0x02)
        Notify (\_SB.PC02.BR2A.EPCU.VSP0, 0x02)
        Notify (\_SB.PC02.BR2A.EPCU.VSP1, 0x02)
        Notify (\_SB.PC02.BR2A.EPCU.VSP2, 0x02)
        Notify (\_SB.PC02.BR2A.EPCU.VSP3, 0x02)
    }
}

